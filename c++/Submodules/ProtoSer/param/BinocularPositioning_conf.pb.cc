// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: BinocularPositioning_conf.proto
// Protobuf C++ Version: 5.30.0-dev

#include "BinocularPositioning_conf.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace binocularpositioning {

inline constexpr SGBMConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_disparity_{0},
        num_disparities_{0},
        block_size_{0},
        p1_{0},
        p2_{0},
        disp12_max_diff_{0},
        pre_filter_cap_{0},
        uniqueness_ratio_{0},
        speckle_window_size_{0},
        speckle_range_{0},
        mode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SGBMConfig::SGBMConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SGBMConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SGBMConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SGBMConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SGBMConfigDefaultTypeInternal() {}
  union {
    SGBMConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SGBMConfigDefaultTypeInternal _SGBMConfig_default_instance_;

inline constexpr CRLConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        engine_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CRLConfig::CRLConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CRLConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CRLConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CRLConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CRLConfigDefaultTypeInternal() {}
  union {
    CRLConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CRLConfigDefaultTypeInternal _CRLConfig_default_instance_;

inline constexpr ModelConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sgbm_config_{nullptr},
        crl_config_{nullptr},
        run_status_{false},
        baseline_{0},
        focus_pixel_{0},
        focal_length_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModelConfig::ModelConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModelConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModelConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfigDefaultTypeInternal() {}
  union {
    ModelConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfigDefaultTypeInternal _ModelConfig_default_instance_;

inline constexpr BinocularPositioningConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        model_config_{nullptr},
        modules_config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BinocularPositioningConfig::BinocularPositioningConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BinocularPositioningConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BinocularPositioningConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BinocularPositioningConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BinocularPositioningConfigDefaultTypeInternal() {}
  union {
    BinocularPositioningConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BinocularPositioningConfigDefaultTypeInternal _BinocularPositioningConfig_default_instance_;
}  // namespace binocularpositioning
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_BinocularPositioning_5fconf_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_BinocularPositioning_5fconf_2eproto = nullptr;
const ::uint32_t
    TableStruct_BinocularPositioning_5fconf_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.min_disparity_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.num_disparities_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.block_size_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.p1_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.p2_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.disp12_max_diff_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.pre_filter_cap_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.uniqueness_ratio_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.speckle_window_size_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.speckle_range_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::SGBMConfig, _impl_.mode_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::CRLConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::CRLConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::CRLConfig, _impl_.engine_path_),
        0,
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::ModelConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::ModelConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::ModelConfig, _impl_.sgbm_config_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::ModelConfig, _impl_.crl_config_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::ModelConfig, _impl_.run_status_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::ModelConfig, _impl_.baseline_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::ModelConfig, _impl_.focus_pixel_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::ModelConfig, _impl_.focal_length_),
        0,
        1,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::BinocularPositioningConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::BinocularPositioningConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::BinocularPositioningConfig, _impl_.model_config_),
        PROTOBUF_FIELD_OFFSET(::binocularpositioning::BinocularPositioningConfig, _impl_.modules_config_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 19, -1, sizeof(::binocularpositioning::SGBMConfig)},
        {30, 39, -1, sizeof(::binocularpositioning::CRLConfig)},
        {40, 54, -1, sizeof(::binocularpositioning::ModelConfig)},
        {60, 70, -1, sizeof(::binocularpositioning::BinocularPositioningConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::binocularpositioning::_SGBMConfig_default_instance_._instance,
    &::binocularpositioning::_CRLConfig_default_instance_._instance,
    &::binocularpositioning::_ModelConfig_default_instance_._instance,
    &::binocularpositioning::_BinocularPositioningConfig_default_instance_._instance,
};
const char descriptor_table_protodef_BinocularPositioning_5fconf_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037BinocularPositioning_conf.proto\022\024binoc"
    "ularpositioning\032\032AlgorithmConfig_conf.pr"
    "oto\"\365\001\n\nSGBMConfig\022\025\n\rmin_disparity\030\001 \001("
    "\005\022\027\n\017num_disparities\030\002 \001(\005\022\022\n\nblock_size"
    "\030\003 \001(\005\022\n\n\002p1\030\004 \001(\005\022\n\n\002p2\030\005 \001(\005\022\027\n\017disp12"
    "_max_diff\030\006 \001(\005\022\026\n\016pre_filter_cap\030\007 \001(\005\022"
    "\030\n\020uniqueness_ratio\030\010 \001(\005\022\033\n\023speckle_win"
    "dow_size\030\t \001(\005\022\025\n\rspeckle_range\030\n \001(\005\022\014\n"
    "\004mode\030\013 \001(\005\" \n\tCRLConfig\022\023\n\013engine_path\030"
    "\001 \001(\t\"\312\001\n\013ModelConfig\0225\n\013sgbm_config\030\001 \001"
    "(\0132 .binocularpositioning.SGBMConfig\0223\n\n"
    "crl_config\030\002 \001(\0132\037.binocularpositioning."
    "CRLConfig\022\022\n\nrun_status\030\003 \001(\010\022\020\n\010baselin"
    "e\030\004 \001(\002\022\023\n\013focus_pixel\030\005 \001(\005\022\024\n\014focal_le"
    "ngth\030\006 \001(\002\"\204\001\n\032BinocularPositioningConfi"
    "g\0227\n\014model_config\030\001 \001(\0132!.binocularposit"
    "ioning.ModelConfig\022-\n\016modules_config\030\002 \001"
    "(\0132\025.common.ModulesConfigb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_BinocularPositioning_5fconf_2eproto_deps[1] =
    {
        &::descriptor_table_AlgorithmConfig_5fconf_2eproto,
};
static ::absl::once_flag descriptor_table_BinocularPositioning_5fconf_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_BinocularPositioning_5fconf_2eproto = {
    false,
    false,
    713,
    descriptor_table_protodef_BinocularPositioning_5fconf_2eproto,
    "BinocularPositioning_conf.proto",
    &descriptor_table_BinocularPositioning_5fconf_2eproto_once,
    descriptor_table_BinocularPositioning_5fconf_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_BinocularPositioning_5fconf_2eproto::offsets,
    file_level_enum_descriptors_BinocularPositioning_5fconf_2eproto,
    file_level_service_descriptors_BinocularPositioning_5fconf_2eproto,
};
namespace binocularpositioning {
// ===================================================================

class SGBMConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SGBMConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_._has_bits_);
};

SGBMConfig::SGBMConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SGBMConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:binocularpositioning.SGBMConfig)
}
SGBMConfig::SGBMConfig(
    ::google::protobuf::Arena* arena, const SGBMConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SGBMConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SGBMConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SGBMConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_disparity_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, min_disparity_) +
               sizeof(Impl_::mode_));
}
SGBMConfig::~SGBMConfig() {
  // @@protoc_insertion_point(destructor:binocularpositioning.SGBMConfig)
  SharedDtor(*this);
}
inline void SGBMConfig::SharedDtor(MessageLite& self) {
  SGBMConfig& this_ = static_cast<SGBMConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SGBMConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SGBMConfig(arena);
}
constexpr auto SGBMConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SGBMConfig),
                                            alignof(SGBMConfig));
}
constexpr auto SGBMConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SGBMConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SGBMConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SGBMConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SGBMConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SGBMConfig>(), &SGBMConfig::ByteSizeLong,
              &SGBMConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_._cached_size_),
          false,
      },
      &SGBMConfig::kDescriptorMethods,
      &descriptor_table_BinocularPositioning_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        SGBMConfig_class_data_ =
            SGBMConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* SGBMConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SGBMConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SGBMConfig_class_data_.tc_table);
  return SGBMConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 0, 2> SGBMConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SGBMConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::binocularpositioning::SGBMConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 min_disparity = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.min_disparity_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.min_disparity_)}},
    // int32 num_disparities = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.num_disparities_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.num_disparities_)}},
    // int32 block_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.block_size_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.block_size_)}},
    // int32 p1 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.p1_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.p1_)}},
    // int32 p2 = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.p2_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.p2_)}},
    // int32 disp12_max_diff = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.disp12_max_diff_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.disp12_max_diff_)}},
    // int32 pre_filter_cap = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.pre_filter_cap_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.pre_filter_cap_)}},
    // int32 uniqueness_ratio = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.uniqueness_ratio_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.uniqueness_ratio_)}},
    // int32 speckle_window_size = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.speckle_window_size_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.speckle_window_size_)}},
    // int32 speckle_range = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.speckle_range_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.speckle_range_)}},
    // int32 mode = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SGBMConfig, _impl_.mode_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 min_disparity = 1;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.min_disparity_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 num_disparities = 2;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.num_disparities_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 block_size = 3;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.block_size_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 p1 = 4;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.p1_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 p2 = 5;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.p2_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 disp12_max_diff = 6;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.disp12_max_diff_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 pre_filter_cap = 7;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.pre_filter_cap_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 uniqueness_ratio = 8;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.uniqueness_ratio_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 speckle_window_size = 9;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.speckle_window_size_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 speckle_range = 10;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.speckle_range_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 mode = 11;
    {PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.mode_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SGBMConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:binocularpositioning.SGBMConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.min_disparity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.uniqueness_ratio_) -
        reinterpret_cast<char*>(&_impl_.min_disparity_)) + sizeof(_impl_.uniqueness_ratio_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&_impl_.speckle_window_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mode_) -
        reinterpret_cast<char*>(&_impl_.speckle_window_size_)) + sizeof(_impl_.mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SGBMConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SGBMConfig& this_ = static_cast<const SGBMConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SGBMConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SGBMConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:binocularpositioning.SGBMConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 min_disparity = 1;
          if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
            if (this_._internal_min_disparity() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<1>(
                      stream, this_._internal_min_disparity(), target);
            }
          }

          // int32 num_disparities = 2;
          if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
            if (this_._internal_num_disparities() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<2>(
                      stream, this_._internal_num_disparities(), target);
            }
          }

          // int32 block_size = 3;
          if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
            if (this_._internal_block_size() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<3>(
                      stream, this_._internal_block_size(), target);
            }
          }

          // int32 p1 = 4;
          if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
            if (this_._internal_p1() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<4>(
                      stream, this_._internal_p1(), target);
            }
          }

          // int32 p2 = 5;
          if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
            if (this_._internal_p2() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<5>(
                      stream, this_._internal_p2(), target);
            }
          }

          // int32 disp12_max_diff = 6;
          if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
            if (this_._internal_disp12_max_diff() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<6>(
                      stream, this_._internal_disp12_max_diff(), target);
            }
          }

          // int32 pre_filter_cap = 7;
          if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
            if (this_._internal_pre_filter_cap() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<7>(
                      stream, this_._internal_pre_filter_cap(), target);
            }
          }

          // int32 uniqueness_ratio = 8;
          if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
            if (this_._internal_uniqueness_ratio() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<8>(
                      stream, this_._internal_uniqueness_ratio(), target);
            }
          }

          // int32 speckle_window_size = 9;
          if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
            if (this_._internal_speckle_window_size() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<9>(
                      stream, this_._internal_speckle_window_size(), target);
            }
          }

          // int32 speckle_range = 10;
          if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
            if (this_._internal_speckle_range() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<10>(
                      stream, this_._internal_speckle_range(), target);
            }
          }

          // int32 mode = 11;
          if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
            if (this_._internal_mode() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<11>(
                      stream, this_._internal_mode(), target);
            }
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:binocularpositioning.SGBMConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SGBMConfig::ByteSizeLong(const MessageLite& base) {
          const SGBMConfig& this_ = static_cast<const SGBMConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SGBMConfig::ByteSizeLong() const {
          const SGBMConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:binocularpositioning.SGBMConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // int32 min_disparity = 1;
            if (cached_has_bits & 0x00000001u) {
              if (this_._internal_min_disparity() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_min_disparity());
              }
            }
            // int32 num_disparities = 2;
            if (cached_has_bits & 0x00000002u) {
              if (this_._internal_num_disparities() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_num_disparities());
              }
            }
            // int32 block_size = 3;
            if (cached_has_bits & 0x00000004u) {
              if (this_._internal_block_size() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_block_size());
              }
            }
            // int32 p1 = 4;
            if (cached_has_bits & 0x00000008u) {
              if (this_._internal_p1() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_p1());
              }
            }
            // int32 p2 = 5;
            if (cached_has_bits & 0x00000010u) {
              if (this_._internal_p2() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_p2());
              }
            }
            // int32 disp12_max_diff = 6;
            if (cached_has_bits & 0x00000020u) {
              if (this_._internal_disp12_max_diff() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_disp12_max_diff());
              }
            }
            // int32 pre_filter_cap = 7;
            if (cached_has_bits & 0x00000040u) {
              if (this_._internal_pre_filter_cap() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_pre_filter_cap());
              }
            }
            // int32 uniqueness_ratio = 8;
            if (cached_has_bits & 0x00000080u) {
              if (this_._internal_uniqueness_ratio() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_uniqueness_ratio());
              }
            }
          }
          if (cached_has_bits & 0x00000700u) {
            // int32 speckle_window_size = 9;
            if (cached_has_bits & 0x00000100u) {
              if (this_._internal_speckle_window_size() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_speckle_window_size());
              }
            }
            // int32 speckle_range = 10;
            if (cached_has_bits & 0x00000200u) {
              if (this_._internal_speckle_range() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_speckle_range());
              }
            }
            // int32 mode = 11;
            if (cached_has_bits & 0x00000400u) {
              if (this_._internal_mode() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_mode());
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SGBMConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SGBMConfig*>(&to_msg);
  auto& from = static_cast<const SGBMConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:binocularpositioning.SGBMConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      if (from._internal_min_disparity() != 0) {
        _this->_impl_.min_disparity_ = from._impl_.min_disparity_;
      }
    }
    if (cached_has_bits & 0x00000002u) {
      if (from._internal_num_disparities() != 0) {
        _this->_impl_.num_disparities_ = from._impl_.num_disparities_;
      }
    }
    if (cached_has_bits & 0x00000004u) {
      if (from._internal_block_size() != 0) {
        _this->_impl_.block_size_ = from._impl_.block_size_;
      }
    }
    if (cached_has_bits & 0x00000008u) {
      if (from._internal_p1() != 0) {
        _this->_impl_.p1_ = from._impl_.p1_;
      }
    }
    if (cached_has_bits & 0x00000010u) {
      if (from._internal_p2() != 0) {
        _this->_impl_.p2_ = from._impl_.p2_;
      }
    }
    if (cached_has_bits & 0x00000020u) {
      if (from._internal_disp12_max_diff() != 0) {
        _this->_impl_.disp12_max_diff_ = from._impl_.disp12_max_diff_;
      }
    }
    if (cached_has_bits & 0x00000040u) {
      if (from._internal_pre_filter_cap() != 0) {
        _this->_impl_.pre_filter_cap_ = from._impl_.pre_filter_cap_;
      }
    }
    if (cached_has_bits & 0x00000080u) {
      if (from._internal_uniqueness_ratio() != 0) {
        _this->_impl_.uniqueness_ratio_ = from._impl_.uniqueness_ratio_;
      }
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      if (from._internal_speckle_window_size() != 0) {
        _this->_impl_.speckle_window_size_ = from._impl_.speckle_window_size_;
      }
    }
    if (cached_has_bits & 0x00000200u) {
      if (from._internal_speckle_range() != 0) {
        _this->_impl_.speckle_range_ = from._impl_.speckle_range_;
      }
    }
    if (cached_has_bits & 0x00000400u) {
      if (from._internal_mode() != 0) {
        _this->_impl_.mode_ = from._impl_.mode_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SGBMConfig::CopyFrom(const SGBMConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:binocularpositioning.SGBMConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SGBMConfig::InternalSwap(SGBMConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.mode_)
      + sizeof(SGBMConfig::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(SGBMConfig, _impl_.min_disparity_)>(
          reinterpret_cast<char*>(&_impl_.min_disparity_),
          reinterpret_cast<char*>(&other->_impl_.min_disparity_));
}

::google::protobuf::Metadata SGBMConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CRLConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CRLConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CRLConfig, _impl_._has_bits_);
};

CRLConfig::CRLConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CRLConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:binocularpositioning.CRLConfig)
}
PROTOBUF_NDEBUG_INLINE CRLConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::binocularpositioning::CRLConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        engine_path_(arena, from.engine_path_) {}

CRLConfig::CRLConfig(
    ::google::protobuf::Arena* arena,
    const CRLConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CRLConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CRLConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:binocularpositioning.CRLConfig)
}
PROTOBUF_NDEBUG_INLINE CRLConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        engine_path_(arena) {}

inline void CRLConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CRLConfig::~CRLConfig() {
  // @@protoc_insertion_point(destructor:binocularpositioning.CRLConfig)
  SharedDtor(*this);
}
inline void CRLConfig::SharedDtor(MessageLite& self) {
  CRLConfig& this_ = static_cast<CRLConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.engine_path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CRLConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CRLConfig(arena);
}
constexpr auto CRLConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CRLConfig),
                                            alignof(CRLConfig));
}
constexpr auto CRLConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CRLConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CRLConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CRLConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CRLConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CRLConfig>(), &CRLConfig::ByteSizeLong,
              &CRLConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CRLConfig, _impl_._cached_size_),
          false,
      },
      &CRLConfig::kDescriptorMethods,
      &descriptor_table_BinocularPositioning_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        CRLConfig_class_data_ =
            CRLConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* CRLConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CRLConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CRLConfig_class_data_.tc_table);
  return CRLConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2> CRLConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CRLConfig, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CRLConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::binocularpositioning::CRLConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string engine_path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CRLConfig, _impl_.engine_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string engine_path = 1;
    {PROTOBUF_FIELD_OFFSET(CRLConfig, _impl_.engine_path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\13\0\0\0\0\0\0"
    "binocularpositioning.CRLConfig"
    "engine_path"
  }},
};

PROTOBUF_NOINLINE void CRLConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:binocularpositioning.CRLConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.engine_path_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CRLConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CRLConfig& this_ = static_cast<const CRLConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CRLConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CRLConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:binocularpositioning.CRLConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string engine_path = 1;
          if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
            if (!this_._internal_engine_path().empty()) {
              const std::string& _s = this_._internal_engine_path();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "binocularpositioning.CRLConfig.engine_path");
              target = stream->WriteStringMaybeAliased(1, _s, target);
            }
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:binocularpositioning.CRLConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CRLConfig::ByteSizeLong(const MessageLite& base) {
          const CRLConfig& this_ = static_cast<const CRLConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CRLConfig::ByteSizeLong() const {
          const CRLConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:binocularpositioning.CRLConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string engine_path = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              if (!this_._internal_engine_path().empty()) {
                total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                                this_._internal_engine_path());
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CRLConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CRLConfig*>(&to_msg);
  auto& from = static_cast<const CRLConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:binocularpositioning.CRLConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    if (!from._internal_engine_path().empty()) {
      _this->_internal_set_engine_path(from._internal_engine_path());
    } else {
      if (_this->_impl_.engine_path_.IsDefault()) {
        _this->_internal_set_engine_path("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CRLConfig::CopyFrom(const CRLConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:binocularpositioning.CRLConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CRLConfig::InternalSwap(CRLConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.engine_path_, &other->_impl_.engine_path_, arena);
}

::google::protobuf::Metadata CRLConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModelConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ModelConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_._has_bits_);
};

ModelConfig::ModelConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModelConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:binocularpositioning.ModelConfig)
}
PROTOBUF_NDEBUG_INLINE ModelConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::binocularpositioning::ModelConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ModelConfig::ModelConfig(
    ::google::protobuf::Arena* arena,
    const ModelConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModelConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModelConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sgbm_config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::binocularpositioning::SGBMConfig>(
                              arena, *from._impl_.sgbm_config_)
                        : nullptr;
  _impl_.crl_config_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::binocularpositioning::CRLConfig>(
                              arena, *from._impl_.crl_config_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, run_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, run_status_),
           offsetof(Impl_, focal_length_) -
               offsetof(Impl_, run_status_) +
               sizeof(Impl_::focal_length_));

  // @@protoc_insertion_point(copy_constructor:binocularpositioning.ModelConfig)
}
PROTOBUF_NDEBUG_INLINE ModelConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ModelConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sgbm_config_),
           0,
           offsetof(Impl_, focal_length_) -
               offsetof(Impl_, sgbm_config_) +
               sizeof(Impl_::focal_length_));
}
ModelConfig::~ModelConfig() {
  // @@protoc_insertion_point(destructor:binocularpositioning.ModelConfig)
  SharedDtor(*this);
}
inline void ModelConfig::SharedDtor(MessageLite& self) {
  ModelConfig& this_ = static_cast<ModelConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.sgbm_config_;
  delete this_._impl_.crl_config_;
  this_._impl_.~Impl_();
}

inline void* ModelConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModelConfig(arena);
}
constexpr auto ModelConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModelConfig),
                                            alignof(ModelConfig));
}
constexpr auto ModelConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModelConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModelConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModelConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModelConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModelConfig>(), &ModelConfig::ByteSizeLong,
              &ModelConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_._cached_size_),
          false,
      },
      &ModelConfig::kDescriptorMethods,
      &descriptor_table_BinocularPositioning_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ModelConfig_class_data_ =
            ModelConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ModelConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModelConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModelConfig_class_data_.tc_table);
  return ModelConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> ModelConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ModelConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::binocularpositioning::ModelConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .binocularpositioning.SGBMConfig sgbm_config = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.sgbm_config_)}},
    // .binocularpositioning.CRLConfig crl_config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.crl_config_)}},
    // bool run_status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModelConfig, _impl_.run_status_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.run_status_)}},
    // float baseline = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.baseline_)}},
    // int32 focus_pixel = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModelConfig, _impl_.focus_pixel_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.focus_pixel_)}},
    // float focal_length = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.focal_length_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .binocularpositioning.SGBMConfig sgbm_config = 1;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.sgbm_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .binocularpositioning.CRLConfig crl_config = 2;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.crl_config_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool run_status = 3;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.run_status_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // float baseline = 4;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.baseline_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // int32 focus_pixel = 5;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.focus_pixel_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float focal_length = 6;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.focal_length_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::binocularpositioning::SGBMConfig>()},
    {::_pbi::TcParser::GetTable<::binocularpositioning::CRLConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:binocularpositioning.ModelConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.sgbm_config_ != nullptr);
      _impl_.sgbm_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.crl_config_ != nullptr);
      _impl_.crl_config_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&_impl_.run_status_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.focal_length_) -
        reinterpret_cast<char*>(&_impl_.run_status_)) + sizeof(_impl_.focal_length_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModelConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModelConfig& this_ = static_cast<const ModelConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModelConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModelConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:binocularpositioning.ModelConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .binocularpositioning.SGBMConfig sgbm_config = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.sgbm_config_, this_._impl_.sgbm_config_->GetCachedSize(), target,
                stream);
          }

          // .binocularpositioning.CRLConfig crl_config = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.crl_config_, this_._impl_.crl_config_->GetCachedSize(), target,
                stream);
          }

          // bool run_status = 3;
          if (cached_has_bits & 0x00000004u) {
            if (this_._internal_run_status() != 0) {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  3, this_._internal_run_status(), target);
            }
          }

          // float baseline = 4;
          if (cached_has_bits & 0x00000008u) {
            if (::absl::bit_cast<::uint32_t>(this_._internal_baseline()) != 0) {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  4, this_._internal_baseline(), target);
            }
          }

          // int32 focus_pixel = 5;
          if (cached_has_bits & 0x00000010u) {
            if (this_._internal_focus_pixel() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<5>(
                      stream, this_._internal_focus_pixel(), target);
            }
          }

          // float focal_length = 6;
          if (cached_has_bits & 0x00000020u) {
            if (::absl::bit_cast<::uint32_t>(this_._internal_focal_length()) != 0) {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  6, this_._internal_focal_length(), target);
            }
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:binocularpositioning.ModelConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModelConfig::ByteSizeLong(const MessageLite& base) {
          const ModelConfig& this_ = static_cast<const ModelConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModelConfig::ByteSizeLong() const {
          const ModelConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:binocularpositioning.ModelConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .binocularpositioning.SGBMConfig sgbm_config = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sgbm_config_);
            }
            // .binocularpositioning.CRLConfig crl_config = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.crl_config_);
            }
            // bool run_status = 3;
            if (cached_has_bits & 0x00000004u) {
              if (this_._internal_run_status() != 0) {
                total_size += 2;
              }
            }
            // float baseline = 4;
            if (cached_has_bits & 0x00000008u) {
              if (::absl::bit_cast<::uint32_t>(this_._internal_baseline()) != 0) {
                total_size += 5;
              }
            }
            // int32 focus_pixel = 5;
            if (cached_has_bits & 0x00000010u) {
              if (this_._internal_focus_pixel() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_focus_pixel());
              }
            }
            // float focal_length = 6;
            if (cached_has_bits & 0x00000020u) {
              if (::absl::bit_cast<::uint32_t>(this_._internal_focal_length()) != 0) {
                total_size += 5;
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModelConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModelConfig*>(&to_msg);
  auto& from = static_cast<const ModelConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:binocularpositioning.ModelConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.sgbm_config_ != nullptr);
      if (_this->_impl_.sgbm_config_ == nullptr) {
        _this->_impl_.sgbm_config_ =
            ::google::protobuf::Message::CopyConstruct<::binocularpositioning::SGBMConfig>(arena, *from._impl_.sgbm_config_);
      } else {
        _this->_impl_.sgbm_config_->MergeFrom(*from._impl_.sgbm_config_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.crl_config_ != nullptr);
      if (_this->_impl_.crl_config_ == nullptr) {
        _this->_impl_.crl_config_ =
            ::google::protobuf::Message::CopyConstruct<::binocularpositioning::CRLConfig>(arena, *from._impl_.crl_config_);
      } else {
        _this->_impl_.crl_config_->MergeFrom(*from._impl_.crl_config_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      if (from._internal_run_status() != 0) {
        _this->_impl_.run_status_ = from._impl_.run_status_;
      }
    }
    if (cached_has_bits & 0x00000008u) {
      if (::absl::bit_cast<::uint32_t>(from._internal_baseline()) != 0) {
        _this->_impl_.baseline_ = from._impl_.baseline_;
      }
    }
    if (cached_has_bits & 0x00000010u) {
      if (from._internal_focus_pixel() != 0) {
        _this->_impl_.focus_pixel_ = from._impl_.focus_pixel_;
      }
    }
    if (cached_has_bits & 0x00000020u) {
      if (::absl::bit_cast<::uint32_t>(from._internal_focal_length()) != 0) {
        _this->_impl_.focal_length_ = from._impl_.focal_length_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModelConfig::CopyFrom(const ModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:binocularpositioning.ModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModelConfig::InternalSwap(ModelConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.focal_length_)
      + sizeof(ModelConfig::_impl_.focal_length_)
      - PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.sgbm_config_)>(
          reinterpret_cast<char*>(&_impl_.sgbm_config_),
          reinterpret_cast<char*>(&other->_impl_.sgbm_config_));
}

::google::protobuf::Metadata ModelConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BinocularPositioningConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BinocularPositioningConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BinocularPositioningConfig, _impl_._has_bits_);
};

void BinocularPositioningConfig::clear_modules_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.modules_config_ != nullptr) _impl_.modules_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
BinocularPositioningConfig::BinocularPositioningConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BinocularPositioningConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:binocularpositioning.BinocularPositioningConfig)
}
PROTOBUF_NDEBUG_INLINE BinocularPositioningConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::binocularpositioning::BinocularPositioningConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BinocularPositioningConfig::BinocularPositioningConfig(
    ::google::protobuf::Arena* arena,
    const BinocularPositioningConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BinocularPositioningConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BinocularPositioningConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.model_config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::binocularpositioning::ModelConfig>(
                              arena, *from._impl_.model_config_)
                        : nullptr;
  _impl_.modules_config_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::common::ModulesConfig>(
                              arena, *from._impl_.modules_config_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:binocularpositioning.BinocularPositioningConfig)
}
PROTOBUF_NDEBUG_INLINE BinocularPositioningConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BinocularPositioningConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, model_config_),
           0,
           offsetof(Impl_, modules_config_) -
               offsetof(Impl_, model_config_) +
               sizeof(Impl_::modules_config_));
}
BinocularPositioningConfig::~BinocularPositioningConfig() {
  // @@protoc_insertion_point(destructor:binocularpositioning.BinocularPositioningConfig)
  SharedDtor(*this);
}
inline void BinocularPositioningConfig::SharedDtor(MessageLite& self) {
  BinocularPositioningConfig& this_ = static_cast<BinocularPositioningConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.model_config_;
  delete this_._impl_.modules_config_;
  this_._impl_.~Impl_();
}

inline void* BinocularPositioningConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BinocularPositioningConfig(arena);
}
constexpr auto BinocularPositioningConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BinocularPositioningConfig),
                                            alignof(BinocularPositioningConfig));
}
constexpr auto BinocularPositioningConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BinocularPositioningConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BinocularPositioningConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BinocularPositioningConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BinocularPositioningConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BinocularPositioningConfig>(), &BinocularPositioningConfig::ByteSizeLong,
              &BinocularPositioningConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BinocularPositioningConfig, _impl_._cached_size_),
          false,
      },
      &BinocularPositioningConfig::kDescriptorMethods,
      &descriptor_table_BinocularPositioning_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        BinocularPositioningConfig_class_data_ =
            BinocularPositioningConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* BinocularPositioningConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BinocularPositioningConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BinocularPositioningConfig_class_data_.tc_table);
  return BinocularPositioningConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> BinocularPositioningConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BinocularPositioningConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BinocularPositioningConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::binocularpositioning::BinocularPositioningConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .common.ModulesConfig modules_config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(BinocularPositioningConfig, _impl_.modules_config_)}},
    // .binocularpositioning.ModelConfig model_config = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BinocularPositioningConfig, _impl_.model_config_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .binocularpositioning.ModelConfig model_config = 1;
    {PROTOBUF_FIELD_OFFSET(BinocularPositioningConfig, _impl_.model_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .common.ModulesConfig modules_config = 2;
    {PROTOBUF_FIELD_OFFSET(BinocularPositioningConfig, _impl_.modules_config_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::binocularpositioning::ModelConfig>()},
    {::_pbi::TcParser::GetTable<::common::ModulesConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BinocularPositioningConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:binocularpositioning.BinocularPositioningConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.model_config_ != nullptr);
      _impl_.model_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.modules_config_ != nullptr);
      _impl_.modules_config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BinocularPositioningConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BinocularPositioningConfig& this_ = static_cast<const BinocularPositioningConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BinocularPositioningConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BinocularPositioningConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:binocularpositioning.BinocularPositioningConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .binocularpositioning.ModelConfig model_config = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.model_config_, this_._impl_.model_config_->GetCachedSize(), target,
                stream);
          }

          // .common.ModulesConfig modules_config = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.modules_config_, this_._impl_.modules_config_->GetCachedSize(), target,
                stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:binocularpositioning.BinocularPositioningConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BinocularPositioningConfig::ByteSizeLong(const MessageLite& base) {
          const BinocularPositioningConfig& this_ = static_cast<const BinocularPositioningConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BinocularPositioningConfig::ByteSizeLong() const {
          const BinocularPositioningConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:binocularpositioning.BinocularPositioningConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .binocularpositioning.ModelConfig model_config = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.model_config_);
            }
            // .common.ModulesConfig modules_config = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.modules_config_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BinocularPositioningConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BinocularPositioningConfig*>(&to_msg);
  auto& from = static_cast<const BinocularPositioningConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:binocularpositioning.BinocularPositioningConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.model_config_ != nullptr);
      if (_this->_impl_.model_config_ == nullptr) {
        _this->_impl_.model_config_ =
            ::google::protobuf::Message::CopyConstruct<::binocularpositioning::ModelConfig>(arena, *from._impl_.model_config_);
      } else {
        _this->_impl_.model_config_->MergeFrom(*from._impl_.model_config_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.modules_config_ != nullptr);
      if (_this->_impl_.modules_config_ == nullptr) {
        _this->_impl_.modules_config_ =
            ::google::protobuf::Message::CopyConstruct<::common::ModulesConfig>(arena, *from._impl_.modules_config_);
      } else {
        _this->_impl_.modules_config_->MergeFrom(*from._impl_.modules_config_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BinocularPositioningConfig::CopyFrom(const BinocularPositioningConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:binocularpositioning.BinocularPositioningConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BinocularPositioningConfig::InternalSwap(BinocularPositioningConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BinocularPositioningConfig, _impl_.modules_config_)
      + sizeof(BinocularPositioningConfig::_impl_.modules_config_)
      - PROTOBUF_FIELD_OFFSET(BinocularPositioningConfig, _impl_.model_config_)>(
          reinterpret_cast<char*>(&_impl_.model_config_),
          reinterpret_cast<char*>(&other->_impl_.model_config_));
}

::google::protobuf::Metadata BinocularPositioningConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace binocularpositioning
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_BinocularPositioning_5fconf_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

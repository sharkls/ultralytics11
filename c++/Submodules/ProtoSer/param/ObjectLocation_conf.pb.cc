// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ObjectLocation_conf.proto
// Protobuf C++ Version: 5.30.0-dev

#include "ObjectLocation_conf.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace objectlocation {

inline constexpr TaskConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        iou_thres_{0},
        num_keys_{0},
        bucket_size_{0},
        max_distance_{0},
        run_status_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TaskConfig::TaskConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TaskConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskConfigDefaultTypeInternal() {}
  union {
    TaskConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskConfigDefaultTypeInternal _TaskConfig_default_instance_;

inline constexpr ObjectLocationConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_config_{nullptr},
        modules_config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ObjectLocationConfig::ObjectLocationConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ObjectLocationConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ObjectLocationConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectLocationConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectLocationConfigDefaultTypeInternal() {}
  union {
    ObjectLocationConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectLocationConfigDefaultTypeInternal _ObjectLocationConfig_default_instance_;
}  // namespace objectlocation
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ObjectLocation_5fconf_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ObjectLocation_5fconf_2eproto = nullptr;
const ::uint32_t
    TableStruct_ObjectLocation_5fconf_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::objectlocation::TaskConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::objectlocation::TaskConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::objectlocation::TaskConfig, _impl_.iou_thres_),
        PROTOBUF_FIELD_OFFSET(::objectlocation::TaskConfig, _impl_.num_keys_),
        PROTOBUF_FIELD_OFFSET(::objectlocation::TaskConfig, _impl_.bucket_size_),
        PROTOBUF_FIELD_OFFSET(::objectlocation::TaskConfig, _impl_.max_distance_),
        PROTOBUF_FIELD_OFFSET(::objectlocation::TaskConfig, _impl_.run_status_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::objectlocation::ObjectLocationConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::objectlocation::ObjectLocationConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::objectlocation::ObjectLocationConfig, _impl_.task_config_),
        PROTOBUF_FIELD_OFFSET(::objectlocation::ObjectLocationConfig, _impl_.modules_config_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::objectlocation::TaskConfig)},
        {18, 28, -1, sizeof(::objectlocation::ObjectLocationConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::objectlocation::_TaskConfig_default_instance_._instance,
    &::objectlocation::_ObjectLocationConfig_default_instance_._instance,
};
const char descriptor_table_protodef_ObjectLocation_5fconf_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\031ObjectLocation_conf.proto\022\016objectlocat"
    "ion\032\032AlgorithmConfig_conf.proto\"p\n\nTaskC"
    "onfig\022\021\n\tiou_thres\030\001 \001(\002\022\020\n\010num_keys\030\002 \001"
    "(\005\022\023\n\013bucket_size\030\003 \001(\002\022\024\n\014max_distance\030"
    "\004 \001(\002\022\022\n\nrun_status\030\005 \001(\010\"v\n\024ObjectLocat"
    "ionConfig\022/\n\013task_config\030\001 \001(\0132\032.objectl"
    "ocation.TaskConfig\022-\n\016modules_config\030\002 \001"
    "(\0132\025.common.ModulesConfigb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ObjectLocation_5fconf_2eproto_deps[1] =
    {
        &::descriptor_table_AlgorithmConfig_5fconf_2eproto,
};
static ::absl::once_flag descriptor_table_ObjectLocation_5fconf_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ObjectLocation_5fconf_2eproto = {
    false,
    false,
    313,
    descriptor_table_protodef_ObjectLocation_5fconf_2eproto,
    "ObjectLocation_conf.proto",
    &descriptor_table_ObjectLocation_5fconf_2eproto_once,
    descriptor_table_ObjectLocation_5fconf_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_ObjectLocation_5fconf_2eproto::offsets,
    file_level_enum_descriptors_ObjectLocation_5fconf_2eproto,
    file_level_service_descriptors_ObjectLocation_5fconf_2eproto,
};
namespace objectlocation {
// ===================================================================

class TaskConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TaskConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_._has_bits_);
};

TaskConfig::TaskConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TaskConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:objectlocation.TaskConfig)
}
TaskConfig::TaskConfig(
    ::google::protobuf::Arena* arena, const TaskConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TaskConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TaskConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TaskConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, iou_thres_),
           0,
           offsetof(Impl_, run_status_) -
               offsetof(Impl_, iou_thres_) +
               sizeof(Impl_::run_status_));
}
TaskConfig::~TaskConfig() {
  // @@protoc_insertion_point(destructor:objectlocation.TaskConfig)
  SharedDtor(*this);
}
inline void TaskConfig::SharedDtor(MessageLite& self) {
  TaskConfig& this_ = static_cast<TaskConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TaskConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskConfig(arena);
}
constexpr auto TaskConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TaskConfig),
                                            alignof(TaskConfig));
}
constexpr auto TaskConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TaskConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TaskConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TaskConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TaskConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TaskConfig>(), &TaskConfig::ByteSizeLong,
              &TaskConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_._cached_size_),
          false,
      },
      &TaskConfig::kDescriptorMethods,
      &descriptor_table_ObjectLocation_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        TaskConfig_class_data_ =
            TaskConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* TaskConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TaskConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TaskConfig_class_data_.tc_table);
  return TaskConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> TaskConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TaskConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::objectlocation::TaskConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float iou_thres = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.iou_thres_)}},
    // int32 num_keys = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskConfig, _impl_.num_keys_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.num_keys_)}},
    // float bucket_size = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.bucket_size_)}},
    // float max_distance = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.max_distance_)}},
    // bool run_status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TaskConfig, _impl_.run_status_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.run_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float iou_thres = 1;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.iou_thres_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // int32 num_keys = 2;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.num_keys_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float bucket_size = 3;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.bucket_size_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float max_distance = 4;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.max_distance_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // bool run_status = 5;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.run_status_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TaskConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:objectlocation.TaskConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.iou_thres_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.run_status_) -
        reinterpret_cast<char*>(&_impl_.iou_thres_)) + sizeof(_impl_.run_status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskConfig& this_ = static_cast<const TaskConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:objectlocation.TaskConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float iou_thres = 1;
          if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
            if (::absl::bit_cast<::uint32_t>(this_._internal_iou_thres()) != 0) {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  1, this_._internal_iou_thres(), target);
            }
          }

          // int32 num_keys = 2;
          if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
            if (this_._internal_num_keys() != 0) {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<2>(
                      stream, this_._internal_num_keys(), target);
            }
          }

          // float bucket_size = 3;
          if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
            if (::absl::bit_cast<::uint32_t>(this_._internal_bucket_size()) != 0) {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  3, this_._internal_bucket_size(), target);
            }
          }

          // float max_distance = 4;
          if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
            if (::absl::bit_cast<::uint32_t>(this_._internal_max_distance()) != 0) {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  4, this_._internal_max_distance(), target);
            }
          }

          // bool run_status = 5;
          if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
            if (this_._internal_run_status() != 0) {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  5, this_._internal_run_status(), target);
            }
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:objectlocation.TaskConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskConfig::ByteSizeLong(const MessageLite& base) {
          const TaskConfig& this_ = static_cast<const TaskConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskConfig::ByteSizeLong() const {
          const TaskConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:objectlocation.TaskConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // float iou_thres = 1;
            if (cached_has_bits & 0x00000001u) {
              if (::absl::bit_cast<::uint32_t>(this_._internal_iou_thres()) != 0) {
                total_size += 5;
              }
            }
            // int32 num_keys = 2;
            if (cached_has_bits & 0x00000002u) {
              if (this_._internal_num_keys() != 0) {
                total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                    this_._internal_num_keys());
              }
            }
            // float bucket_size = 3;
            if (cached_has_bits & 0x00000004u) {
              if (::absl::bit_cast<::uint32_t>(this_._internal_bucket_size()) != 0) {
                total_size += 5;
              }
            }
            // float max_distance = 4;
            if (cached_has_bits & 0x00000008u) {
              if (::absl::bit_cast<::uint32_t>(this_._internal_max_distance()) != 0) {
                total_size += 5;
              }
            }
            // bool run_status = 5;
            if (cached_has_bits & 0x00000010u) {
              if (this_._internal_run_status() != 0) {
                total_size += 2;
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskConfig*>(&to_msg);
  auto& from = static_cast<const TaskConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:objectlocation.TaskConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      if (::absl::bit_cast<::uint32_t>(from._internal_iou_thres()) != 0) {
        _this->_impl_.iou_thres_ = from._impl_.iou_thres_;
      }
    }
    if (cached_has_bits & 0x00000002u) {
      if (from._internal_num_keys() != 0) {
        _this->_impl_.num_keys_ = from._impl_.num_keys_;
      }
    }
    if (cached_has_bits & 0x00000004u) {
      if (::absl::bit_cast<::uint32_t>(from._internal_bucket_size()) != 0) {
        _this->_impl_.bucket_size_ = from._impl_.bucket_size_;
      }
    }
    if (cached_has_bits & 0x00000008u) {
      if (::absl::bit_cast<::uint32_t>(from._internal_max_distance()) != 0) {
        _this->_impl_.max_distance_ = from._impl_.max_distance_;
      }
    }
    if (cached_has_bits & 0x00000010u) {
      if (from._internal_run_status() != 0) {
        _this->_impl_.run_status_ = from._impl_.run_status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskConfig::CopyFrom(const TaskConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectlocation.TaskConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskConfig::InternalSwap(TaskConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.run_status_)
      + sizeof(TaskConfig::_impl_.run_status_)
      - PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.iou_thres_)>(
          reinterpret_cast<char*>(&_impl_.iou_thres_),
          reinterpret_cast<char*>(&other->_impl_.iou_thres_));
}

::google::protobuf::Metadata TaskConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ObjectLocationConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ObjectLocationConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ObjectLocationConfig, _impl_._has_bits_);
};

void ObjectLocationConfig::clear_modules_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.modules_config_ != nullptr) _impl_.modules_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ObjectLocationConfig::ObjectLocationConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ObjectLocationConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:objectlocation.ObjectLocationConfig)
}
PROTOBUF_NDEBUG_INLINE ObjectLocationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::objectlocation::ObjectLocationConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ObjectLocationConfig::ObjectLocationConfig(
    ::google::protobuf::Arena* arena,
    const ObjectLocationConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ObjectLocationConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ObjectLocationConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::objectlocation::TaskConfig>(
                              arena, *from._impl_.task_config_)
                        : nullptr;
  _impl_.modules_config_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::common::ModulesConfig>(
                              arena, *from._impl_.modules_config_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:objectlocation.ObjectLocationConfig)
}
PROTOBUF_NDEBUG_INLINE ObjectLocationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ObjectLocationConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_config_),
           0,
           offsetof(Impl_, modules_config_) -
               offsetof(Impl_, task_config_) +
               sizeof(Impl_::modules_config_));
}
ObjectLocationConfig::~ObjectLocationConfig() {
  // @@protoc_insertion_point(destructor:objectlocation.ObjectLocationConfig)
  SharedDtor(*this);
}
inline void ObjectLocationConfig::SharedDtor(MessageLite& self) {
  ObjectLocationConfig& this_ = static_cast<ObjectLocationConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.task_config_;
  delete this_._impl_.modules_config_;
  this_._impl_.~Impl_();
}

inline void* ObjectLocationConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ObjectLocationConfig(arena);
}
constexpr auto ObjectLocationConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ObjectLocationConfig),
                                            alignof(ObjectLocationConfig));
}
constexpr auto ObjectLocationConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ObjectLocationConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ObjectLocationConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ObjectLocationConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ObjectLocationConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ObjectLocationConfig>(), &ObjectLocationConfig::ByteSizeLong,
              &ObjectLocationConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ObjectLocationConfig, _impl_._cached_size_),
          false,
      },
      &ObjectLocationConfig::kDescriptorMethods,
      &descriptor_table_ObjectLocation_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ObjectLocationConfig_class_data_ =
            ObjectLocationConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ObjectLocationConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ObjectLocationConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ObjectLocationConfig_class_data_.tc_table);
  return ObjectLocationConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ObjectLocationConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ObjectLocationConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ObjectLocationConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::objectlocation::ObjectLocationConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .common.ModulesConfig modules_config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ObjectLocationConfig, _impl_.modules_config_)}},
    // .objectlocation.TaskConfig task_config = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ObjectLocationConfig, _impl_.task_config_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .objectlocation.TaskConfig task_config = 1;
    {PROTOBUF_FIELD_OFFSET(ObjectLocationConfig, _impl_.task_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .common.ModulesConfig modules_config = 2;
    {PROTOBUF_FIELD_OFFSET(ObjectLocationConfig, _impl_.modules_config_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::objectlocation::TaskConfig>()},
    {::_pbi::TcParser::GetTable<::common::ModulesConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ObjectLocationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:objectlocation.ObjectLocationConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.task_config_ != nullptr);
      _impl_.task_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.modules_config_ != nullptr);
      _impl_.modules_config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ObjectLocationConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ObjectLocationConfig& this_ = static_cast<const ObjectLocationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ObjectLocationConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ObjectLocationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:objectlocation.ObjectLocationConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .objectlocation.TaskConfig task_config = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.task_config_, this_._impl_.task_config_->GetCachedSize(), target,
                stream);
          }

          // .common.ModulesConfig modules_config = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.modules_config_, this_._impl_.modules_config_->GetCachedSize(), target,
                stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:objectlocation.ObjectLocationConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ObjectLocationConfig::ByteSizeLong(const MessageLite& base) {
          const ObjectLocationConfig& this_ = static_cast<const ObjectLocationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ObjectLocationConfig::ByteSizeLong() const {
          const ObjectLocationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:objectlocation.ObjectLocationConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .objectlocation.TaskConfig task_config = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_config_);
            }
            // .common.ModulesConfig modules_config = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.modules_config_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ObjectLocationConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ObjectLocationConfig*>(&to_msg);
  auto& from = static_cast<const ObjectLocationConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:objectlocation.ObjectLocationConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.task_config_ != nullptr);
      if (_this->_impl_.task_config_ == nullptr) {
        _this->_impl_.task_config_ =
            ::google::protobuf::Message::CopyConstruct<::objectlocation::TaskConfig>(arena, *from._impl_.task_config_);
      } else {
        _this->_impl_.task_config_->MergeFrom(*from._impl_.task_config_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.modules_config_ != nullptr);
      if (_this->_impl_.modules_config_ == nullptr) {
        _this->_impl_.modules_config_ =
            ::google::protobuf::Message::CopyConstruct<::common::ModulesConfig>(arena, *from._impl_.modules_config_);
      } else {
        _this->_impl_.modules_config_->MergeFrom(*from._impl_.modules_config_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectLocationConfig::CopyFrom(const ObjectLocationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:objectlocation.ObjectLocationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ObjectLocationConfig::InternalSwap(ObjectLocationConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjectLocationConfig, _impl_.modules_config_)
      + sizeof(ObjectLocationConfig::_impl_.modules_config_)
      - PROTOBUF_FIELD_OFFSET(ObjectLocationConfig, _impl_.task_config_)>(
          reinterpret_cast<char*>(&_impl_.task_config_),
          reinterpret_cast<char*>(&other->_impl_.task_config_));
}

::google::protobuf::Metadata ObjectLocationConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace objectlocation
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ObjectLocation_5fconf_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

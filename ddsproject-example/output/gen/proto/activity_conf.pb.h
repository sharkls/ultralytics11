// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: activity_conf.proto
// Protobuf C++ Version: 5.30.0-dev

#ifndef activity_5fconf_2eproto_2epb_2eh
#define activity_5fconf_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "node_conf.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_activity_5fconf_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_activity_5fconf_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_activity_5fconf_2eproto;
class ActivityConfig;
struct ActivityConfigDefaultTypeInternal;
extern ActivityConfigDefaultTypeInternal _ActivityConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ActivityConfig_class_data_;
class ActivityInfo;
struct ActivityInfoDefaultTypeInternal;
extern ActivityInfoDefaultTypeInternal _ActivityInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ActivityInfo_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class ActivityConfig final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ActivityConfig) */ {
 public:
  inline ActivityConfig() : ActivityConfig(nullptr) {}
  ~ActivityConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ActivityConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ActivityConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActivityConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActivityConfig(const ActivityConfig& from) : ActivityConfig(nullptr, from) {}
  inline ActivityConfig(ActivityConfig&& from) noexcept
      : ActivityConfig(nullptr, std::move(from)) {}
  inline ActivityConfig& operator=(const ActivityConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActivityConfig& operator=(ActivityConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActivityConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActivityConfig* internal_default_instance() {
    return reinterpret_cast<const ActivityConfig*>(
        &_ActivityConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ActivityConfig& a, ActivityConfig& b) { a.Swap(&b); }
  inline void Swap(ActivityConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActivityConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActivityConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ActivityConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActivityConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActivityConfig& from) { ActivityConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ActivityConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ActivityConfig"; }

 protected:
  explicit ActivityConfig(::google::protobuf::Arena* arena);
  ActivityConfig(::google::protobuf::Arena* arena, const ActivityConfig& from);
  ActivityConfig(::google::protobuf::Arena* arena, ActivityConfig&& from) noexcept
      : ActivityConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfFilePathFieldNumber = 1,
    kNodeConfFieldNumber = 2,
  };
  // optional string conf_file_path = 1;
  bool has_conf_file_path() const;
  void clear_conf_file_path() ;
  const std::string& conf_file_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_conf_file_path(Arg_&& arg, Args_... args);
  std::string* mutable_conf_file_path();
  [[nodiscard]] std::string* release_conf_file_path();
  void set_allocated_conf_file_path(std::string* value);

  private:
  const std::string& _internal_conf_file_path() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_conf_file_path(const std::string& value);
  std::string* _internal_mutable_conf_file_path();

  public:
  // required .NodeConfig node_conf = 2;
  bool has_node_conf() const;
  void clear_node_conf() ;
  const ::NodeConfig& node_conf() const;
  [[nodiscard]] ::NodeConfig* release_node_conf();
  ::NodeConfig* mutable_node_conf();
  void set_allocated_node_conf(::NodeConfig* value);
  void unsafe_arena_set_allocated_node_conf(::NodeConfig* value);
  ::NodeConfig* unsafe_arena_release_node_conf();

  private:
  const ::NodeConfig& _internal_node_conf() const;
  ::NodeConfig* _internal_mutable_node_conf();

  public:
  // @@protoc_insertion_point(class_scope:ActivityConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ActivityConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr conf_file_path_;
    ::NodeConfig* node_conf_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_activity_5fconf_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ActivityConfig_class_data_;
// -------------------------------------------------------------------

class ActivityInfo final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ActivityInfo) */ {
 public:
  inline ActivityInfo() : ActivityInfo(nullptr) {}
  ~ActivityInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ActivityInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ActivityInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActivityInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActivityInfo(const ActivityInfo& from) : ActivityInfo(nullptr, from) {}
  inline ActivityInfo(ActivityInfo&& from) noexcept
      : ActivityInfo(nullptr, std::move(from)) {}
  inline ActivityInfo& operator=(const ActivityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActivityInfo& operator=(ActivityInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActivityInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActivityInfo* internal_default_instance() {
    return reinterpret_cast<const ActivityInfo*>(
        &_ActivityInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ActivityInfo& a, ActivityInfo& b) { a.Swap(&b); }
  inline void Swap(ActivityInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActivityInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActivityInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ActivityInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActivityInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActivityInfo& from) { ActivityInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ActivityInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ActivityInfo"; }

 protected:
  explicit ActivityInfo(::google::protobuf::Arena* arena);
  ActivityInfo(::google::protobuf::Arena* arena, const ActivityInfo& from);
  ActivityInfo(::google::protobuf::Arena* arena, ActivityInfo&& from) noexcept
      : ActivityInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClassNameFieldNumber = 1,
    kActiviryConfFieldNumber = 2,
  };
  // optional string class_name = 1;
  bool has_class_name() const;
  void clear_class_name() ;
  const std::string& class_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_class_name(Arg_&& arg, Args_... args);
  std::string* mutable_class_name();
  [[nodiscard]] std::string* release_class_name();
  void set_allocated_class_name(std::string* value);

  private:
  const std::string& _internal_class_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_class_name(const std::string& value);
  std::string* _internal_mutable_class_name();

  public:
  // optional .ActivityConfig activiry_conf = 2;
  bool has_activiry_conf() const;
  void clear_activiry_conf() ;
  const ::ActivityConfig& activiry_conf() const;
  [[nodiscard]] ::ActivityConfig* release_activiry_conf();
  ::ActivityConfig* mutable_activiry_conf();
  void set_allocated_activiry_conf(::ActivityConfig* value);
  void unsafe_arena_set_allocated_activiry_conf(::ActivityConfig* value);
  ::ActivityConfig* unsafe_arena_release_activiry_conf();

  private:
  const ::ActivityConfig& _internal_activiry_conf() const;
  ::ActivityConfig* _internal_mutable_activiry_conf();

  public:
  // @@protoc_insertion_point(class_scope:ActivityInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      31, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ActivityInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr class_name_;
    ::ActivityConfig* activiry_conf_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_activity_5fconf_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ActivityInfo_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ActivityConfig

// optional string conf_file_path = 1;
inline bool ActivityConfig::has_conf_file_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ActivityConfig::clear_conf_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conf_file_path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ActivityConfig::conf_file_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ActivityConfig.conf_file_path)
  return _internal_conf_file_path();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ActivityConfig::set_conf_file_path(Arg_&& arg,
                                              Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.conf_file_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ActivityConfig.conf_file_path)
}
inline std::string* ActivityConfig::mutable_conf_file_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_conf_file_path();
  // @@protoc_insertion_point(field_mutable:ActivityConfig.conf_file_path)
  return _s;
}
inline const std::string& ActivityConfig::_internal_conf_file_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conf_file_path_.Get();
}
inline void ActivityConfig::_internal_set_conf_file_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.conf_file_path_.Set(value, GetArena());
}
inline std::string* ActivityConfig::_internal_mutable_conf_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.conf_file_path_.Mutable( GetArena());
}
inline std::string* ActivityConfig::release_conf_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ActivityConfig.conf_file_path)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.conf_file_path_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.conf_file_path_.Set("", GetArena());
  }
  return released;
}
inline void ActivityConfig::set_allocated_conf_file_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.conf_file_path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.conf_file_path_.IsDefault()) {
    _impl_.conf_file_path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityConfig.conf_file_path)
}

// required .NodeConfig node_conf = 2;
inline bool ActivityConfig::has_node_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.node_conf_ != nullptr);
  return value;
}
inline const ::NodeConfig& ActivityConfig::_internal_node_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::NodeConfig* p = _impl_.node_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::NodeConfig&>(::_NodeConfig_default_instance_);
}
inline const ::NodeConfig& ActivityConfig::node_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ActivityConfig.node_conf)
  return _internal_node_conf();
}
inline void ActivityConfig::unsafe_arena_set_allocated_node_conf(::NodeConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_conf_);
  }
  _impl_.node_conf_ = reinterpret_cast<::NodeConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ActivityConfig.node_conf)
}
inline ::NodeConfig* ActivityConfig::release_node_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::NodeConfig* released = _impl_.node_conf_;
  _impl_.node_conf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::NodeConfig* ActivityConfig::unsafe_arena_release_node_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ActivityConfig.node_conf)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::NodeConfig* temp = _impl_.node_conf_;
  _impl_.node_conf_ = nullptr;
  return temp;
}
inline ::NodeConfig* ActivityConfig::_internal_mutable_node_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::NodeConfig>(GetArena());
    _impl_.node_conf_ = reinterpret_cast<::NodeConfig*>(p);
  }
  return _impl_.node_conf_;
}
inline ::NodeConfig* ActivityConfig::mutable_node_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::NodeConfig* _msg = _internal_mutable_node_conf();
  // @@protoc_insertion_point(field_mutable:ActivityConfig.node_conf)
  return _msg;
}
inline void ActivityConfig::set_allocated_node_conf(::NodeConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.node_conf_ = reinterpret_cast<::NodeConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:ActivityConfig.node_conf)
}

// -------------------------------------------------------------------

// ActivityInfo

// optional string class_name = 1;
inline bool ActivityInfo::has_class_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ActivityInfo::clear_class_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.class_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ActivityInfo::class_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ActivityInfo.class_name)
  return _internal_class_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ActivityInfo::set_class_name(Arg_&& arg,
                                              Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.class_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ActivityInfo.class_name)
}
inline std::string* ActivityInfo::mutable_class_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_class_name();
  // @@protoc_insertion_point(field_mutable:ActivityInfo.class_name)
  return _s;
}
inline const std::string& ActivityInfo::_internal_class_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.class_name_.Get();
}
inline void ActivityInfo::_internal_set_class_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.class_name_.Set(value, GetArena());
}
inline std::string* ActivityInfo::_internal_mutable_class_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.class_name_.Mutable( GetArena());
}
inline std::string* ActivityInfo::release_class_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ActivityInfo.class_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.class_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.class_name_.Set("", GetArena());
  }
  return released;
}
inline void ActivityInfo::set_allocated_class_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.class_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.class_name_.IsDefault()) {
    _impl_.class_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityInfo.class_name)
}

// optional .ActivityConfig activiry_conf = 2;
inline bool ActivityInfo::has_activiry_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.activiry_conf_ != nullptr);
  return value;
}
inline void ActivityInfo::clear_activiry_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activiry_conf_ != nullptr) _impl_.activiry_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::ActivityConfig& ActivityInfo::_internal_activiry_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ActivityConfig* p = _impl_.activiry_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::ActivityConfig&>(::_ActivityConfig_default_instance_);
}
inline const ::ActivityConfig& ActivityInfo::activiry_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ActivityInfo.activiry_conf)
  return _internal_activiry_conf();
}
inline void ActivityInfo::unsafe_arena_set_allocated_activiry_conf(::ActivityConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activiry_conf_);
  }
  _impl_.activiry_conf_ = reinterpret_cast<::ActivityConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ActivityInfo.activiry_conf)
}
inline ::ActivityConfig* ActivityInfo::release_activiry_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ActivityConfig* released = _impl_.activiry_conf_;
  _impl_.activiry_conf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ActivityConfig* ActivityInfo::unsafe_arena_release_activiry_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ActivityInfo.activiry_conf)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ActivityConfig* temp = _impl_.activiry_conf_;
  _impl_.activiry_conf_ = nullptr;
  return temp;
}
inline ::ActivityConfig* ActivityInfo::_internal_mutable_activiry_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activiry_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ActivityConfig>(GetArena());
    _impl_.activiry_conf_ = reinterpret_cast<::ActivityConfig*>(p);
  }
  return _impl_.activiry_conf_;
}
inline ::ActivityConfig* ActivityInfo::mutable_activiry_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::ActivityConfig* _msg = _internal_mutable_activiry_conf();
  // @@protoc_insertion_point(field_mutable:ActivityInfo.activiry_conf)
  return _msg;
}
inline void ActivityInfo::set_allocated_activiry_conf(::ActivityConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.activiry_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.activiry_conf_ = reinterpret_cast<::ActivityConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:ActivityInfo.activiry_conf)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // activity_5fconf_2eproto_2epb_2eh

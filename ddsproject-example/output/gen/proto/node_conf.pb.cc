// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: node_conf.proto
// Protobuf C++ Version: 5.30.0-dev

#include "node_conf.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr NodeConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        white_list_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_size_{0u},
        domain_id_{80u},
        comm_type_{static_cast< ::CommType >(2)} {}

template <typename>
PROTOBUF_CONSTEXPR NodeConfig::NodeConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NodeConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeConfigDefaultTypeInternal() {}
  union {
    NodeConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeConfigDefaultTypeInternal _NodeConfig_default_instance_;

inline constexpr NodeConfs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_conf_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeConfs::NodeConfs(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NodeConfs_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeConfsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeConfsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeConfsDefaultTypeInternal() {}
  union {
    NodeConfs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeConfsDefaultTypeInternal _NodeConfs_default_instance_;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_node_5fconf_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_node_5fconf_2eproto = nullptr;
const ::uint32_t
    TableStruct_node_5fconf_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::NodeConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NodeConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeConfig, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::NodeConfig, _impl_.domain_id_),
        PROTOBUF_FIELD_OFFSET(::NodeConfig, _impl_.comm_type_),
        PROTOBUF_FIELD_OFFSET(::NodeConfig, _impl_.segment_size_),
        PROTOBUF_FIELD_OFFSET(::NodeConfig, _impl_.white_list_),
        0,
        3,
        4,
        2,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NodeConfs, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeConfs, _impl_.node_conf_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::NodeConfig)},
        {18, -1, -1, sizeof(::NodeConfs)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_NodeConfig_default_instance_._instance,
    &::_NodeConfs_default_instance_._instance,
};
const char descriptor_table_protodef_node_5fconf_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017node_conf.proto\"\204\001\n\nNodeConfig\022\014\n\004name"
    "\030\001 \002(\t\022\025\n\tdomain_Id\030\002 \002(\r:\00280\022%\n\tcomm_ty"
    "pe\030\003 \001(\0162\t.CommType:\007DEFAULT\022\024\n\014segment_"
    "size\030\004 \001(\r\022\024\n\nwhite_list\030\005 \001(\t:\000\"+\n\tNode"
    "Confs\022\036\n\tnode_conf\030\001 \003(\0132\013.NodeConfig*)\n"
    "\010CommType\022\007\n\003UDP\020\000\022\007\n\003SHM\020\001\022\013\n\007DEFAULT\020\002"
};
static ::absl::once_flag descriptor_table_node_5fconf_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_node_5fconf_2eproto = {
    false,
    false,
    240,
    descriptor_table_protodef_node_5fconf_2eproto,
    "node_conf.proto",
    &descriptor_table_node_5fconf_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_node_5fconf_2eproto::offsets,
    file_level_enum_descriptors_node_5fconf_2eproto,
    file_level_service_descriptors_node_5fconf_2eproto,
};
const ::google::protobuf::EnumDescriptor* CommType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_node_5fconf_2eproto);
  return file_level_enum_descriptors_node_5fconf_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CommType_internal_data_[] = {
    196608u, 0u, };
bool CommType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class NodeConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NodeConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000009) ^ 0x00000009) != 0;
  }
};

NodeConfig::NodeConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeConfig)
}
PROTOBUF_NDEBUG_INLINE NodeConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NodeConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        white_list_(arena, from.white_list_) {}

NodeConfig::NodeConfig(
    ::google::protobuf::Arena* arena,
    const NodeConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, segment_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, segment_size_),
           offsetof(Impl_, comm_type_) -
               offsetof(Impl_, segment_size_) +
               sizeof(Impl_::comm_type_));

  // @@protoc_insertion_point(copy_constructor:NodeConfig)
}
PROTOBUF_NDEBUG_INLINE NodeConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        white_list_(arena),
        domain_id_{80u},
        comm_type_{static_cast< ::CommType >(2)} {}

inline void NodeConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.segment_size_ = {};
}
NodeConfig::~NodeConfig() {
  // @@protoc_insertion_point(destructor:NodeConfig)
  SharedDtor(*this);
}
inline void NodeConfig::SharedDtor(MessageLite& self) {
  NodeConfig& this_ = static_cast<NodeConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.white_list_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NodeConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeConfig(arena);
}
constexpr auto NodeConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NodeConfig),
                                            alignof(NodeConfig));
}
constexpr auto NodeConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NodeConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          NodeConfig::IsInitializedImpl,
          &NodeConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NodeConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NodeConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NodeConfig>(), &NodeConfig::ByteSizeLong,
              &NodeConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_._cached_size_),
          false,
      },
      &NodeConfig::kDescriptorMethods,
      &descriptor_table_node_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        NodeConfig_class_data_ =
            NodeConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* NodeConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NodeConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NodeConfig_class_data_.tc_table);
  return NodeConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 33, 2> NodeConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NodeConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.name_)}},
    // required uint32 domain_Id = 2 [default = 80];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeConfig, _impl_.domain_id_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.domain_id_)}},
    // optional .CommType comm_type = 3 [default = DEFAULT];
    {::_pbi::TcParser::FastEr0S1,
     {24, 4, 2, PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.comm_type_)}},
    // optional uint32 segment_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeConfig, _impl_.segment_size_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.segment_size_)}},
    // optional string white_list = 5 [default = ""];
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.white_list_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string name = 1;
    {PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 domain_Id = 2 [default = 80];
    {PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.domain_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CommType comm_type = 3 [default = DEFAULT];
    {PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.comm_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 segment_size = 4;
    {PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.segment_size_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string white_list = 5 [default = ""];
    {PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.white_list_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {0, 3},
  }}, {{
    "\12\4\0\0\0\12\0\0"
    "NodeConfig"
    "name"
    "white_list"
  }},
};

PROTOBUF_NOINLINE void NodeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.white_list_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    _impl_.segment_size_ = 0u;
    _impl_.domain_id_ = 80u;
    _impl_.comm_type_ = 2;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeConfig& this_ = static_cast<const NodeConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:NodeConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "NodeConfig.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // required uint32 domain_Id = 2 [default = 80];
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_domain_id(), target);
          }

          // optional .CommType comm_type = 3 [default = DEFAULT];
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_comm_type(), target);
          }

          // optional uint32 segment_size = 4;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_segment_size(), target);
          }

          // optional string white_list = 5 [default = ""];
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_white_list();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "NodeConfig.white_list");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:NodeConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeConfig::ByteSizeLong(const MessageLite& base) {
          const NodeConfig& this_ = static_cast<const NodeConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeConfig::ByteSizeLong() const {
          const NodeConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:NodeConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // required string name = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          if (cached_has_bits & 0x00000006u) {
            // optional string white_list = 5 [default = ""];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_white_list());
            }
            // optional uint32 segment_size = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_segment_size());
            }
          }
           {
            // required uint32 domain_Id = 2 [default = 80];
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_domain_id());
            }
          }
           {
            // optional .CommType comm_type = 3 [default = DEFAULT];
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_comm_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeConfig*>(&to_msg);
  auto& from = static_cast<const NodeConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_white_list(from._internal_white_list());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.segment_size_ = from._impl_.segment_size_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.domain_id_ = from._impl_.domain_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.comm_type_ = from._impl_.comm_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeConfig::CopyFrom(const NodeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const NodeConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void NodeConfig::InternalSwap(NodeConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.white_list_, &other->_impl_.white_list_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.comm_type_)
      + sizeof(NodeConfig::_impl_.comm_type_)
      - PROTOBUF_FIELD_OFFSET(NodeConfig, _impl_.segment_size_)>(
          reinterpret_cast<char*>(&_impl_.segment_size_),
          reinterpret_cast<char*>(&other->_impl_.segment_size_));
}

::google::protobuf::Metadata NodeConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeConfs::_Internal {
 public:
};

NodeConfs::NodeConfs(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeConfs_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeConfs)
}
PROTOBUF_NDEBUG_INLINE NodeConfs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NodeConfs& from_msg)
      : node_conf_{visibility, arena, from.node_conf_},
        _cached_size_{0} {}

NodeConfs::NodeConfs(
    ::google::protobuf::Arena* arena,
    const NodeConfs& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeConfs_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeConfs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:NodeConfs)
}
PROTOBUF_NDEBUG_INLINE NodeConfs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_conf_{visibility, arena},
        _cached_size_{0} {}

inline void NodeConfs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeConfs::~NodeConfs() {
  // @@protoc_insertion_point(destructor:NodeConfs)
  SharedDtor(*this);
}
inline void NodeConfs::SharedDtor(MessageLite& self) {
  NodeConfs& this_ = static_cast<NodeConfs&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* NodeConfs::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeConfs(arena);
}
constexpr auto NodeConfs::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeConfs, _impl_.node_conf_) +
          decltype(NodeConfs::_impl_.node_conf_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NodeConfs), alignof(NodeConfs), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeConfs::PlacementNew_,
                                 sizeof(NodeConfs),
                                 alignof(NodeConfs));
  }
}
constexpr auto NodeConfs::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NodeConfs_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          NodeConfs::IsInitializedImpl,
          &NodeConfs::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NodeConfs>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NodeConfs::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NodeConfs>(), &NodeConfs::ByteSizeLong,
              &NodeConfs::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NodeConfs, _impl_._cached_size_),
          false,
      },
      &NodeConfs::kDescriptorMethods,
      &descriptor_table_node_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        NodeConfs_class_data_ =
            NodeConfs::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* NodeConfs::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NodeConfs_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NodeConfs_class_data_.tc_table);
  return NodeConfs_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NodeConfs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NodeConfs_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeConfs>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .NodeConfig node_conf = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeConfs, _impl_.node_conf_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .NodeConfig node_conf = 1;
    {PROTOBUF_FIELD_OFFSET(NodeConfs, _impl_.node_conf_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NodeConfs::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeConfs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_conf_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeConfs::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeConfs& this_ = static_cast<const NodeConfs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeConfs::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeConfs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:NodeConfs)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .NodeConfig node_conf = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_conf_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node_conf().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:NodeConfs)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeConfs::ByteSizeLong(const MessageLite& base) {
          const NodeConfs& this_ = static_cast<const NodeConfs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeConfs::ByteSizeLong() const {
          const NodeConfs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:NodeConfs)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .NodeConfig node_conf = 1;
            {
              total_size += 1UL * this_._internal_node_conf_size();
              for (const auto& msg : this_._internal_node_conf()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeConfs::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeConfs*>(&to_msg);
  auto& from = static_cast<const NodeConfs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeConfs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_conf()->MergeFrom(
      from._internal_node_conf());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeConfs::CopyFrom(const NodeConfs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeConfs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeConfs::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const NodeConfs&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_node_conf()))
    return false;
  return true;
}

void NodeConfs::InternalSwap(NodeConfs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.node_conf_.InternalSwap(&other->_impl_.node_conf_);
}

::google::protobuf::Metadata NodeConfs::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_node_5fconf_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

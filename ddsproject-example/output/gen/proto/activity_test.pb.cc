// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: activity_test.proto
// Protobuf C++ Version: 5.30.0-dev

#include "activity_test.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr ActivityTestTopicConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        read_topic1_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        write_topic2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ActivityTestTopicConfig::ActivityTestTopicConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ActivityTestTopicConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ActivityTestTopicConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivityTestTopicConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivityTestTopicConfigDefaultTypeInternal() {}
  union {
    ActivityTestTopicConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivityTestTopicConfigDefaultTypeInternal _ActivityTestTopicConfig_default_instance_;

inline constexpr ActivityTestConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        topic_config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ActivityTestConfig::ActivityTestConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ActivityTestConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ActivityTestConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivityTestConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivityTestConfigDefaultTypeInternal() {}
  union {
    ActivityTestConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivityTestConfigDefaultTypeInternal _ActivityTestConfig_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_activity_5ftest_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_activity_5ftest_2eproto = nullptr;
const ::uint32_t
    TableStruct_activity_5ftest_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::ActivityTestTopicConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ActivityTestTopicConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ActivityTestTopicConfig, _impl_.read_topic1_),
        PROTOBUF_FIELD_OFFSET(::ActivityTestTopicConfig, _impl_.write_topic2_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::ActivityTestConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ActivityTestConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ActivityTestConfig, _impl_.topic_config_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::ActivityTestTopicConfig)},
        {12, 21, -1, sizeof(::ActivityTestConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_ActivityTestTopicConfig_default_instance_._instance,
    &::_ActivityTestConfig_default_instance_._instance,
};
const char descriptor_table_protodef_activity_5ftest_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023activity_test.proto\"D\n\027ActivityTestTop"
    "icConfig\022\023\n\013read_topic1\030\001 \001(\t\022\024\n\014write_t"
    "opic2\030\002 \001(\t\"D\n\022ActivityTestConfig\022.\n\014top"
    "ic_config\030\001 \001(\0132\030.ActivityTestTopicConfi"
    "g"
};
static ::absl::once_flag descriptor_table_activity_5ftest_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_activity_5ftest_2eproto = {
    false,
    false,
    161,
    descriptor_table_protodef_activity_5ftest_2eproto,
    "activity_test.proto",
    &descriptor_table_activity_5ftest_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_activity_5ftest_2eproto::offsets,
    file_level_enum_descriptors_activity_5ftest_2eproto,
    file_level_service_descriptors_activity_5ftest_2eproto,
};
// ===================================================================

class ActivityTestTopicConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ActivityTestTopicConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ActivityTestTopicConfig, _impl_._has_bits_);
};

ActivityTestTopicConfig::ActivityTestTopicConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ActivityTestTopicConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ActivityTestTopicConfig)
}
PROTOBUF_NDEBUG_INLINE ActivityTestTopicConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ActivityTestTopicConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        read_topic1_(arena, from.read_topic1_),
        write_topic2_(arena, from.write_topic2_) {}

ActivityTestTopicConfig::ActivityTestTopicConfig(
    ::google::protobuf::Arena* arena,
    const ActivityTestTopicConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ActivityTestTopicConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ActivityTestTopicConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ActivityTestTopicConfig)
}
PROTOBUF_NDEBUG_INLINE ActivityTestTopicConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        read_topic1_(arena),
        write_topic2_(arena) {}

inline void ActivityTestTopicConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ActivityTestTopicConfig::~ActivityTestTopicConfig() {
  // @@protoc_insertion_point(destructor:ActivityTestTopicConfig)
  SharedDtor(*this);
}
inline void ActivityTestTopicConfig::SharedDtor(MessageLite& self) {
  ActivityTestTopicConfig& this_ = static_cast<ActivityTestTopicConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.read_topic1_.Destroy();
  this_._impl_.write_topic2_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ActivityTestTopicConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ActivityTestTopicConfig(arena);
}
constexpr auto ActivityTestTopicConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ActivityTestTopicConfig),
                                            alignof(ActivityTestTopicConfig));
}
constexpr auto ActivityTestTopicConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ActivityTestTopicConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ActivityTestTopicConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ActivityTestTopicConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ActivityTestTopicConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ActivityTestTopicConfig>(), &ActivityTestTopicConfig::ByteSizeLong,
              &ActivityTestTopicConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ActivityTestTopicConfig, _impl_._cached_size_),
          false,
      },
      &ActivityTestTopicConfig::kDescriptorMethods,
      &descriptor_table_activity_5ftest_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ActivityTestTopicConfig_class_data_ =
            ActivityTestTopicConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ActivityTestTopicConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ActivityTestTopicConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ActivityTestTopicConfig_class_data_.tc_table);
  return ActivityTestTopicConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> ActivityTestTopicConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ActivityTestTopicConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ActivityTestTopicConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ActivityTestTopicConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string write_topic2 = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ActivityTestTopicConfig, _impl_.write_topic2_)}},
    // optional string read_topic1 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ActivityTestTopicConfig, _impl_.read_topic1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string read_topic1 = 1;
    {PROTOBUF_FIELD_OFFSET(ActivityTestTopicConfig, _impl_.read_topic1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string write_topic2 = 2;
    {PROTOBUF_FIELD_OFFSET(ActivityTestTopicConfig, _impl_.write_topic2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\13\14\0\0\0\0\0"
    "ActivityTestTopicConfig"
    "read_topic1"
    "write_topic2"
  }},
};

PROTOBUF_NOINLINE void ActivityTestTopicConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityTestTopicConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.read_topic1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.write_topic2_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ActivityTestTopicConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ActivityTestTopicConfig& this_ = static_cast<const ActivityTestTopicConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ActivityTestTopicConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ActivityTestTopicConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ActivityTestTopicConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string read_topic1 = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_read_topic1();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "ActivityTestTopicConfig.read_topic1");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string write_topic2 = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_write_topic2();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "ActivityTestTopicConfig.write_topic2");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ActivityTestTopicConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ActivityTestTopicConfig::ByteSizeLong(const MessageLite& base) {
          const ActivityTestTopicConfig& this_ = static_cast<const ActivityTestTopicConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ActivityTestTopicConfig::ByteSizeLong() const {
          const ActivityTestTopicConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ActivityTestTopicConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string read_topic1 = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_read_topic1());
            }
            // optional string write_topic2 = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_write_topic2());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ActivityTestTopicConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActivityTestTopicConfig*>(&to_msg);
  auto& from = static_cast<const ActivityTestTopicConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ActivityTestTopicConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_read_topic1(from._internal_read_topic1());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_write_topic2(from._internal_write_topic2());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActivityTestTopicConfig::CopyFrom(const ActivityTestTopicConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityTestTopicConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ActivityTestTopicConfig::InternalSwap(ActivityTestTopicConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.read_topic1_, &other->_impl_.read_topic1_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.write_topic2_, &other->_impl_.write_topic2_, arena);
}

::google::protobuf::Metadata ActivityTestTopicConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ActivityTestConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ActivityTestConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ActivityTestConfig, _impl_._has_bits_);
};

ActivityTestConfig::ActivityTestConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ActivityTestConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ActivityTestConfig)
}
PROTOBUF_NDEBUG_INLINE ActivityTestConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ActivityTestConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ActivityTestConfig::ActivityTestConfig(
    ::google::protobuf::Arena* arena,
    const ActivityTestConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ActivityTestConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ActivityTestConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.topic_config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ActivityTestTopicConfig>(
                              arena, *from._impl_.topic_config_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ActivityTestConfig)
}
PROTOBUF_NDEBUG_INLINE ActivityTestConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ActivityTestConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.topic_config_ = {};
}
ActivityTestConfig::~ActivityTestConfig() {
  // @@protoc_insertion_point(destructor:ActivityTestConfig)
  SharedDtor(*this);
}
inline void ActivityTestConfig::SharedDtor(MessageLite& self) {
  ActivityTestConfig& this_ = static_cast<ActivityTestConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.topic_config_;
  this_._impl_.~Impl_();
}

inline void* ActivityTestConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ActivityTestConfig(arena);
}
constexpr auto ActivityTestConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ActivityTestConfig),
                                            alignof(ActivityTestConfig));
}
constexpr auto ActivityTestConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ActivityTestConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ActivityTestConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ActivityTestConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ActivityTestConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ActivityTestConfig>(), &ActivityTestConfig::ByteSizeLong,
              &ActivityTestConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ActivityTestConfig, _impl_._cached_size_),
          false,
      },
      &ActivityTestConfig::kDescriptorMethods,
      &descriptor_table_activity_5ftest_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ActivityTestConfig_class_data_ =
            ActivityTestConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ActivityTestConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ActivityTestConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ActivityTestConfig_class_data_.tc_table);
  return ActivityTestConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ActivityTestConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ActivityTestConfig, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ActivityTestConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ActivityTestConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .ActivityTestTopicConfig topic_config = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ActivityTestConfig, _impl_.topic_config_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .ActivityTestTopicConfig topic_config = 1;
    {PROTOBUF_FIELD_OFFSET(ActivityTestConfig, _impl_.topic_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ActivityTestTopicConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ActivityTestConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityTestConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.topic_config_ != nullptr);
    _impl_.topic_config_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ActivityTestConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ActivityTestConfig& this_ = static_cast<const ActivityTestConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ActivityTestConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ActivityTestConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ActivityTestConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .ActivityTestTopicConfig topic_config = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.topic_config_, this_._impl_.topic_config_->GetCachedSize(), target,
                stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ActivityTestConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ActivityTestConfig::ByteSizeLong(const MessageLite& base) {
          const ActivityTestConfig& this_ = static_cast<const ActivityTestConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ActivityTestConfig::ByteSizeLong() const {
          const ActivityTestConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ActivityTestConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional .ActivityTestTopicConfig topic_config = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.topic_config_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ActivityTestConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActivityTestConfig*>(&to_msg);
  auto& from = static_cast<const ActivityTestConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ActivityTestConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.topic_config_ != nullptr);
    if (_this->_impl_.topic_config_ == nullptr) {
      _this->_impl_.topic_config_ =
          ::google::protobuf::Message::CopyConstruct<::ActivityTestTopicConfig>(arena, *from._impl_.topic_config_);
    } else {
      _this->_impl_.topic_config_->MergeFrom(*from._impl_.topic_config_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActivityTestConfig::CopyFrom(const ActivityTestConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityTestConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ActivityTestConfig::InternalSwap(ActivityTestConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.topic_config_, other->_impl_.topic_config_);
}

::google::protobuf::Metadata ActivityTestConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_activity_5ftest_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

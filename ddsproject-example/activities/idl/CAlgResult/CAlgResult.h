// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file CAlgResult.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_CALGRESULT_H_
#define _FAST_DDS_GENERATED_CALGRESULT_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "../CMultiModalSrcData/CMultiModalSrcData.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(CALGRESULT_SOURCE)
#define CALGRESULT_DllAPI __declspec( dllexport )
#else
#define CALGRESULT_DllAPI __declspec( dllimport )
#endif // CALGRESULT_SOURCE
#else
#define CALGRESULT_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define CALGRESULT_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima





/*!
 * @brief This class represents the structure Keypoint defined by the user in the IDL file.
 * @ingroup CAlgResult
 */
class Keypoint
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport Keypoint();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~Keypoint();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object Keypoint that will be copied.
     */
    eProsima_user_DllExport Keypoint(
            const Keypoint& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object Keypoint that will be copied.
     */
    eProsima_user_DllExport Keypoint(
            Keypoint&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object Keypoint that will be copied.
     */
    eProsima_user_DllExport Keypoint& operator =(
            const Keypoint& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object Keypoint that will be copied.
     */
    eProsima_user_DllExport Keypoint& operator =(
            Keypoint&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x Keypoint object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const Keypoint& x) const;

    /*!
     * @brief Comparison operator.
     * @param x Keypoint object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const Keypoint& x) const;

    /*!
     * @brief This function sets a value in member x
     * @param _x New value for member x
     */
    eProsima_user_DllExport void x(
            float _x);

    /*!
     * @brief This function returns the value of member x
     * @return Value of member x
     */
    eProsima_user_DllExport float x() const;

    /*!
     * @brief This function returns a reference to member x
     * @return Reference to member x
     */
    eProsima_user_DllExport float& x();


    /*!
     * @brief This function sets a value in member y
     * @param _y New value for member y
     */
    eProsima_user_DllExport void y(
            float _y);

    /*!
     * @brief This function returns the value of member y
     * @return Value of member y
     */
    eProsima_user_DllExport float y() const;

    /*!
     * @brief This function returns a reference to member y
     * @return Reference to member y
     */
    eProsima_user_DllExport float& y();


    /*!
     * @brief This function sets a value in member confidence
     * @param _confidence New value for member confidence
     */
    eProsima_user_DllExport void confidence(
            float _confidence);

    /*!
     * @brief This function returns the value of member confidence
     * @return Value of member confidence
     */
    eProsima_user_DllExport float confidence() const;

    /*!
     * @brief This function returns a reference to member confidence
     * @return Reference to member confidence
     */
    eProsima_user_DllExport float& confidence();

private:

    float m_x{0.0};
    float m_y{0.0};
    float m_confidence{0.0};

};


/*!
 * @brief This class represents the structure CObjectResult defined by the user in the IDL file.
 * @ingroup CAlgResult
 */
class CObjectResult
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport CObjectResult();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~CObjectResult();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object CObjectResult that will be copied.
     */
    eProsima_user_DllExport CObjectResult(
            const CObjectResult& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object CObjectResult that will be copied.
     */
    eProsima_user_DllExport CObjectResult(
            CObjectResult&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object CObjectResult that will be copied.
     */
    eProsima_user_DllExport CObjectResult& operator =(
            const CObjectResult& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object CObjectResult that will be copied.
     */
    eProsima_user_DllExport CObjectResult& operator =(
            CObjectResult&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x CObjectResult object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const CObjectResult& x) const;

    /*!
     * @brief Comparison operator.
     * @param x CObjectResult object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const CObjectResult& x) const;

    /*!
     * @brief This function copies the value in member strClass
     * @param _strClass New value to be copied in member strClass
     */
    eProsima_user_DllExport void strClass(
            const std::string& _strClass);

    /*!
     * @brief This function moves the value in member strClass
     * @param _strClass New value to be moved in member strClass
     */
    eProsima_user_DllExport void strClass(
            std::string&& _strClass);

    /*!
     * @brief This function returns a constant reference to member strClass
     * @return Constant reference to member strClass
     */
    eProsima_user_DllExport const std::string& strClass() const;

    /*!
     * @brief This function returns a reference to member strClass
     * @return Reference to member strClass
     */
    eProsima_user_DllExport std::string& strClass();


    /*!
     * @brief This function sets a value in member ucSource
     * @param _ucSource New value for member ucSource
     */
    eProsima_user_DllExport void ucSource(
            uint8_t _ucSource);

    /*!
     * @brief This function returns the value of member ucSource
     * @return Value of member ucSource
     */
    eProsima_user_DllExport uint8_t ucSource() const;

    /*!
     * @brief This function returns a reference to member ucSource
     * @return Reference to member ucSource
     */
    eProsima_user_DllExport uint8_t& ucSource();


    /*!
     * @brief This function sets a value in member usPcTargetId
     * @param _usPcTargetId New value for member usPcTargetId
     */
    eProsima_user_DllExport void usPcTargetId(
            uint16_t _usPcTargetId);

    /*!
     * @brief This function returns the value of member usPcTargetId
     * @return Value of member usPcTargetId
     */
    eProsima_user_DllExport uint16_t usPcTargetId() const;

    /*!
     * @brief This function returns a reference to member usPcTargetId
     * @return Reference to member usPcTargetId
     */
    eProsima_user_DllExport uint16_t& usPcTargetId();


    /*!
     * @brief This function sets a value in member sXCoord
     * @param _sXCoord New value for member sXCoord
     */
    eProsima_user_DllExport void sXCoord(
            int16_t _sXCoord);

    /*!
     * @brief This function returns the value of member sXCoord
     * @return Value of member sXCoord
     */
    eProsima_user_DllExport int16_t sXCoord() const;

    /*!
     * @brief This function returns a reference to member sXCoord
     * @return Reference to member sXCoord
     */
    eProsima_user_DllExport int16_t& sXCoord();


    /*!
     * @brief This function sets a value in member sYCoord
     * @param _sYCoord New value for member sYCoord
     */
    eProsima_user_DllExport void sYCoord(
            int16_t _sYCoord);

    /*!
     * @brief This function returns the value of member sYCoord
     * @return Value of member sYCoord
     */
    eProsima_user_DllExport int16_t sYCoord() const;

    /*!
     * @brief This function returns a reference to member sYCoord
     * @return Reference to member sYCoord
     */
    eProsima_user_DllExport int16_t& sYCoord();


    /*!
     * @brief This function sets a value in member sZCoord
     * @param _sZCoord New value for member sZCoord
     */
    eProsima_user_DllExport void sZCoord(
            int16_t _sZCoord);

    /*!
     * @brief This function returns the value of member sZCoord
     * @return Value of member sZCoord
     */
    eProsima_user_DllExport int16_t sZCoord() const;

    /*!
     * @brief This function returns a reference to member sZCoord
     * @return Reference to member sZCoord
     */
    eProsima_user_DllExport int16_t& sZCoord();


    /*!
     * @brief This function sets a value in member usLength
     * @param _usLength New value for member usLength
     */
    eProsima_user_DllExport void usLength(
            uint16_t _usLength);

    /*!
     * @brief This function returns the value of member usLength
     * @return Value of member usLength
     */
    eProsima_user_DllExport uint16_t usLength() const;

    /*!
     * @brief This function returns a reference to member usLength
     * @return Reference to member usLength
     */
    eProsima_user_DllExport uint16_t& usLength();


    /*!
     * @brief This function sets a value in member usWidth
     * @param _usWidth New value for member usWidth
     */
    eProsima_user_DllExport void usWidth(
            uint16_t _usWidth);

    /*!
     * @brief This function returns the value of member usWidth
     * @return Value of member usWidth
     */
    eProsima_user_DllExport uint16_t usWidth() const;

    /*!
     * @brief This function returns a reference to member usWidth
     * @return Reference to member usWidth
     */
    eProsima_user_DllExport uint16_t& usWidth();


    /*!
     * @brief This function sets a value in member usHeight
     * @param _usHeight New value for member usHeight
     */
    eProsima_user_DllExport void usHeight(
            uint16_t _usHeight);

    /*!
     * @brief This function returns the value of member usHeight
     * @return Value of member usHeight
     */
    eProsima_user_DllExport uint16_t usHeight() const;

    /*!
     * @brief This function returns a reference to member usHeight
     * @return Reference to member usHeight
     */
    eProsima_user_DllExport uint16_t& usHeight();


    /*!
     * @brief This function sets a value in member sCourseAngle
     * @param _sCourseAngle New value for member sCourseAngle
     */
    eProsima_user_DllExport void sCourseAngle(
            int16_t _sCourseAngle);

    /*!
     * @brief This function returns the value of member sCourseAngle
     * @return Value of member sCourseAngle
     */
    eProsima_user_DllExport int16_t sCourseAngle() const;

    /*!
     * @brief This function returns a reference to member sCourseAngle
     * @return Reference to member sCourseAngle
     */
    eProsima_user_DllExport int16_t& sCourseAngle();


    /*!
     * @brief This function sets a value in member fDistance
     * @param _fDistance New value for member fDistance
     */
    eProsima_user_DllExport void fDistance(
            float _fDistance);

    /*!
     * @brief This function returns the value of member fDistance
     * @return Value of member fDistance
     */
    eProsima_user_DllExport float fDistance() const;

    /*!
     * @brief This function returns a reference to member fDistance
     * @return Reference to member fDistance
     */
    eProsima_user_DllExport float& fDistance();


    /*!
     * @brief This function sets a value in member usVideoTargetId
     * @param _usVideoTargetId New value for member usVideoTargetId
     */
    eProsima_user_DllExport void usVideoTargetId(
            uint16_t _usVideoTargetId);

    /*!
     * @brief This function returns the value of member usVideoTargetId
     * @return Value of member usVideoTargetId
     */
    eProsima_user_DllExport uint16_t usVideoTargetId() const;

    /*!
     * @brief This function returns a reference to member usVideoTargetId
     * @return Reference to member usVideoTargetId
     */
    eProsima_user_DllExport uint16_t& usVideoTargetId();


    /*!
     * @brief This function sets a value in member fVideoConfidence
     * @param _fVideoConfidence New value for member fVideoConfidence
     */
    eProsima_user_DllExport void fVideoConfidence(
            float _fVideoConfidence);

    /*!
     * @brief This function returns the value of member fVideoConfidence
     * @return Value of member fVideoConfidence
     */
    eProsima_user_DllExport float fVideoConfidence() const;

    /*!
     * @brief This function returns a reference to member fVideoConfidence
     * @return Reference to member fVideoConfidence
     */
    eProsima_user_DllExport float& fVideoConfidence();


    /*!
     * @brief This function sets a value in member fTopLeftX
     * @param _fTopLeftX New value for member fTopLeftX
     */
    eProsima_user_DllExport void fTopLeftX(
            float _fTopLeftX);

    /*!
     * @brief This function returns the value of member fTopLeftX
     * @return Value of member fTopLeftX
     */
    eProsima_user_DllExport float fTopLeftX() const;

    /*!
     * @brief This function returns a reference to member fTopLeftX
     * @return Reference to member fTopLeftX
     */
    eProsima_user_DllExport float& fTopLeftX();


    /*!
     * @brief This function sets a value in member fTopLeftY
     * @param _fTopLeftY New value for member fTopLeftY
     */
    eProsima_user_DllExport void fTopLeftY(
            float _fTopLeftY);

    /*!
     * @brief This function returns the value of member fTopLeftY
     * @return Value of member fTopLeftY
     */
    eProsima_user_DllExport float fTopLeftY() const;

    /*!
     * @brief This function returns a reference to member fTopLeftY
     * @return Reference to member fTopLeftY
     */
    eProsima_user_DllExport float& fTopLeftY();


    /*!
     * @brief This function sets a value in member fBottomRightX
     * @param _fBottomRightX New value for member fBottomRightX
     */
    eProsima_user_DllExport void fBottomRightX(
            float _fBottomRightX);

    /*!
     * @brief This function returns the value of member fBottomRightX
     * @return Value of member fBottomRightX
     */
    eProsima_user_DllExport float fBottomRightX() const;

    /*!
     * @brief This function returns a reference to member fBottomRightX
     * @return Reference to member fBottomRightX
     */
    eProsima_user_DllExport float& fBottomRightX();


    /*!
     * @brief This function sets a value in member fBottomRightY
     * @param _fBottomRightY New value for member fBottomRightY
     */
    eProsima_user_DllExport void fBottomRightY(
            float _fBottomRightY);

    /*!
     * @brief This function returns the value of member fBottomRightY
     * @return Value of member fBottomRightY
     */
    eProsima_user_DllExport float fBottomRightY() const;

    /*!
     * @brief This function returns a reference to member fBottomRightY
     * @return Reference to member fBottomRightY
     */
    eProsima_user_DllExport float& fBottomRightY();


    /*!
     * @brief This function sets a value in member ucColor
     * @param _ucColor New value for member ucColor
     */
    eProsima_user_DllExport void ucColor(
            uint8_t _ucColor);

    /*!
     * @brief This function returns the value of member ucColor
     * @return Value of member ucColor
     */
    eProsima_user_DllExport uint8_t ucColor() const;

    /*!
     * @brief This function returns a reference to member ucColor
     * @return Reference to member ucColor
     */
    eProsima_user_DllExport uint8_t& ucColor();


    /*!
     * @brief This function copies the value in member vecKeypoints
     * @param _vecKeypoints New value to be copied in member vecKeypoints
     */
    eProsima_user_DllExport void vecKeypoints(
            const std::vector<Keypoint>& _vecKeypoints);

    /*!
     * @brief This function moves the value in member vecKeypoints
     * @param _vecKeypoints New value to be moved in member vecKeypoints
     */
    eProsima_user_DllExport void vecKeypoints(
            std::vector<Keypoint>&& _vecKeypoints);

    /*!
     * @brief This function returns a constant reference to member vecKeypoints
     * @return Constant reference to member vecKeypoints
     */
    eProsima_user_DllExport const std::vector<Keypoint>& vecKeypoints() const;

    /*!
     * @brief This function returns a reference to member vecKeypoints
     * @return Reference to member vecKeypoints
     */
    eProsima_user_DllExport std::vector<Keypoint>& vecKeypoints();


    /*!
     * @brief This function sets a value in member usTargetId
     * @param _usTargetId New value for member usTargetId
     */
    eProsima_user_DllExport void usTargetId(
            uint16_t _usTargetId);

    /*!
     * @brief This function returns the value of member usTargetId
     * @return Value of member usTargetId
     */
    eProsima_user_DllExport uint16_t usTargetId() const;

    /*!
     * @brief This function returns a reference to member usTargetId
     * @return Reference to member usTargetId
     */
    eProsima_user_DllExport uint16_t& usTargetId();


    /*!
     * @brief This function sets a value in member sSpeed
     * @param _sSpeed New value for member sSpeed
     */
    eProsima_user_DllExport void sSpeed(
            int16_t _sSpeed);

    /*!
     * @brief This function returns the value of member sSpeed
     * @return Value of member sSpeed
     */
    eProsima_user_DllExport int16_t sSpeed() const;

    /*!
     * @brief This function returns a reference to member sSpeed
     * @return Reference to member sSpeed
     */
    eProsima_user_DllExport int16_t& sSpeed();


    /*!
     * @brief This function sets a value in member ulFirstOccurTime
     * @param _ulFirstOccurTime New value for member ulFirstOccurTime
     */
    eProsima_user_DllExport void ulFirstOccurTime(
            uint64_t _ulFirstOccurTime);

    /*!
     * @brief This function returns the value of member ulFirstOccurTime
     * @return Value of member ulFirstOccurTime
     */
    eProsima_user_DllExport uint64_t ulFirstOccurTime() const;

    /*!
     * @brief This function returns a reference to member ulFirstOccurTime
     * @return Reference to member ulFirstOccurTime
     */
    eProsima_user_DllExport uint64_t& ulFirstOccurTime();


    /*!
     * @brief This function sets a value in member uiTimeSinceUpdate
     * @param _uiTimeSinceUpdate New value for member uiTimeSinceUpdate
     */
    eProsima_user_DllExport void uiTimeSinceUpdate(
            uint32_t _uiTimeSinceUpdate);

    /*!
     * @brief This function returns the value of member uiTimeSinceUpdate
     * @return Value of member uiTimeSinceUpdate
     */
    eProsima_user_DllExport uint32_t uiTimeSinceUpdate() const;

    /*!
     * @brief This function returns a reference to member uiTimeSinceUpdate
     * @return Reference to member uiTimeSinceUpdate
     */
    eProsima_user_DllExport uint32_t& uiTimeSinceUpdate();


    /*!
     * @brief This function sets a value in member usHitNum
     * @param _usHitNum New value for member usHitNum
     */
    eProsima_user_DllExport void usHitNum(
            uint16_t _usHitNum);

    /*!
     * @brief This function returns the value of member usHitNum
     * @return Value of member usHitNum
     */
    eProsima_user_DllExport uint16_t usHitNum() const;

    /*!
     * @brief This function returns a reference to member usHitNum
     * @return Reference to member usHitNum
     */
    eProsima_user_DllExport uint16_t& usHitNum();


    /*!
     * @brief This function sets a value in member bDeleteFlag
     * @param _bDeleteFlag New value for member bDeleteFlag
     */
    eProsima_user_DllExport void bDeleteFlag(
            bool _bDeleteFlag);

    /*!
     * @brief This function returns the value of member bDeleteFlag
     * @return Value of member bDeleteFlag
     */
    eProsima_user_DllExport bool bDeleteFlag() const;

    /*!
     * @brief This function returns a reference to member bDeleteFlag
     * @return Reference to member bDeleteFlag
     */
    eProsima_user_DllExport bool& bDeleteFlag();


    /*!
     * @brief This function sets a value in member usLifeCycle
     * @param _usLifeCycle New value for member usLifeCycle
     */
    eProsima_user_DllExport void usLifeCycle(
            uint16_t _usLifeCycle);

    /*!
     * @brief This function returns the value of member usLifeCycle
     * @return Value of member usLifeCycle
     */
    eProsima_user_DllExport uint16_t usLifeCycle() const;

    /*!
     * @brief This function returns a reference to member usLifeCycle
     * @return Reference to member usLifeCycle
     */
    eProsima_user_DllExport uint16_t& usLifeCycle();


    /*!
     * @brief This function sets a value in member ucSignFlag
     * @param _ucSignFlag New value for member ucSignFlag
     */
    eProsima_user_DllExport void ucSignFlag(
            uint16_t _ucSignFlag);

    /*!
     * @brief This function returns the value of member ucSignFlag
     * @return Value of member ucSignFlag
     */
    eProsima_user_DllExport uint16_t ucSignFlag() const;

    /*!
     * @brief This function returns a reference to member ucSignFlag
     * @return Reference to member ucSignFlag
     */
    eProsima_user_DllExport uint16_t& ucSignFlag();


    /*!
     * @brief This function copies the value in member usVideoInfo
     * @param _usVideoInfo New value to be copied in member usVideoInfo
     */
    eProsima_user_DllExport void usVideoInfo(
            const std::array<uint16_t, 20>& _usVideoInfo);

    /*!
     * @brief This function moves the value in member usVideoInfo
     * @param _usVideoInfo New value to be moved in member usVideoInfo
     */
    eProsima_user_DllExport void usVideoInfo(
            std::array<uint16_t, 20>&& _usVideoInfo);

    /*!
     * @brief This function returns a constant reference to member usVideoInfo
     * @return Constant reference to member usVideoInfo
     */
    eProsima_user_DllExport const std::array<uint16_t, 20>& usVideoInfo() const;

    /*!
     * @brief This function returns a reference to member usVideoInfo
     * @return Reference to member usVideoInfo
     */
    eProsima_user_DllExport std::array<uint16_t, 20>& usVideoInfo();


    /*!
     * @brief This function sets a value in member usMissFrame
     * @param _usMissFrame New value for member usMissFrame
     */
    eProsima_user_DllExport void usMissFrame(
            uint16_t _usMissFrame);

    /*!
     * @brief This function returns the value of member usMissFrame
     * @return Value of member usMissFrame
     */
    eProsima_user_DllExport uint16_t usMissFrame() const;

    /*!
     * @brief This function returns a reference to member usMissFrame
     * @return Reference to member usMissFrame
     */
    eProsima_user_DllExport uint16_t& usMissFrame();


    /*!
     * @brief This function sets a value in member usFrame
     * @param _usFrame New value for member usFrame
     */
    eProsima_user_DllExport void usFrame(
            uint16_t _usFrame);

    /*!
     * @brief This function returns the value of member usFrame
     * @return Value of member usFrame
     */
    eProsima_user_DllExport uint16_t usFrame() const;

    /*!
     * @brief This function returns a reference to member usFrame
     * @return Reference to member usFrame
     */
    eProsima_user_DllExport uint16_t& usFrame();


    /*!
     * @brief This function sets a value in member usLidarFrame
     * @param _usLidarFrame New value for member usLidarFrame
     */
    eProsima_user_DllExport void usLidarFrame(
            uint16_t _usLidarFrame);

    /*!
     * @brief This function returns the value of member usLidarFrame
     * @return Value of member usLidarFrame
     */
    eProsima_user_DllExport uint16_t usLidarFrame() const;

    /*!
     * @brief This function returns a reference to member usLidarFrame
     * @return Reference to member usLidarFrame
     */
    eProsima_user_DllExport uint16_t& usLidarFrame();


    /*!
     * @brief This function sets a value in member fSpeedX
     * @param _fSpeedX New value for member fSpeedX
     */
    eProsima_user_DllExport void fSpeedX(
            float _fSpeedX);

    /*!
     * @brief This function returns the value of member fSpeedX
     * @return Value of member fSpeedX
     */
    eProsima_user_DllExport float fSpeedX() const;

    /*!
     * @brief This function returns a reference to member fSpeedX
     * @return Reference to member fSpeedX
     */
    eProsima_user_DllExport float& fSpeedX();


    /*!
     * @brief This function sets a value in member fSpeedY
     * @param _fSpeedY New value for member fSpeedY
     */
    eProsima_user_DllExport void fSpeedY(
            float _fSpeedY);

    /*!
     * @brief This function returns the value of member fSpeedY
     * @return Value of member fSpeedY
     */
    eProsima_user_DllExport float fSpeedY() const;

    /*!
     * @brief This function returns a reference to member fSpeedY
     * @return Reference to member fSpeedY
     */
    eProsima_user_DllExport float& fSpeedY();


    /*!
     * @brief This function sets a value in member fAcceleration
     * @param _fAcceleration New value for member fAcceleration
     */
    eProsima_user_DllExport void fAcceleration(
            float _fAcceleration);

    /*!
     * @brief This function returns the value of member fAcceleration
     * @return Value of member fAcceleration
     */
    eProsima_user_DllExport float fAcceleration() const;

    /*!
     * @brief This function returns a reference to member fAcceleration
     * @return Reference to member fAcceleration
     */
    eProsima_user_DllExport float& fAcceleration();


    /*!
     * @brief This function sets a value in member fRCS
     * @param _fRCS New value for member fRCS
     */
    eProsima_user_DllExport void fRCS(
            float _fRCS);

    /*!
     * @brief This function returns the value of member fRCS
     * @return Value of member fRCS
     */
    eProsima_user_DllExport float fRCS() const;

    /*!
     * @brief This function returns a reference to member fRCS
     * @return Reference to member fRCS
     */
    eProsima_user_DllExport float& fRCS();

private:

    std::string m_strClass;
    uint8_t m_ucSource{0};
    uint16_t m_usPcTargetId{0};
    int16_t m_sXCoord{0};
    int16_t m_sYCoord{0};
    int16_t m_sZCoord{0};
    uint16_t m_usLength{0};
    uint16_t m_usWidth{0};
    uint16_t m_usHeight{0};
    int16_t m_sCourseAngle{0};
    float m_fDistance{0.0};
    uint16_t m_usVideoTargetId{0};
    float m_fVideoConfidence{0.0};
    float m_fTopLeftX{0.0};
    float m_fTopLeftY{0.0};
    float m_fBottomRightX{0.0};
    float m_fBottomRightY{0.0};
    uint8_t m_ucColor{0};
    std::vector<Keypoint> m_vecKeypoints;
    uint16_t m_usTargetId{0};
    int16_t m_sSpeed{0};
    uint64_t m_ulFirstOccurTime{0};
    uint32_t m_uiTimeSinceUpdate{0};
    uint16_t m_usHitNum{0};
    bool m_bDeleteFlag{false};
    uint16_t m_usLifeCycle{0};
    uint16_t m_ucSignFlag{0};
    std::array<uint16_t, 20> m_usVideoInfo{0};
    uint16_t m_usMissFrame{0};
    uint16_t m_usFrame{0};
    uint16_t m_usLidarFrame{0};
    float m_fSpeedX{0.0};
    float m_fSpeedY{0.0};
    float m_fAcceleration{0.0};
    float m_fRCS{0.0};

};




/*!
 * @brief This class represents the structure CFrameResult defined by the user in the IDL file.
 * @ingroup CAlgResult
 */
class CFrameResult : public CDataBase
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport CFrameResult();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~CFrameResult();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object CFrameResult that will be copied.
     */
    eProsima_user_DllExport CFrameResult(
            const CFrameResult& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object CFrameResult that will be copied.
     */
    eProsima_user_DllExport CFrameResult(
            CFrameResult&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object CFrameResult that will be copied.
     */
    eProsima_user_DllExport CFrameResult& operator =(
            const CFrameResult& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object CFrameResult that will be copied.
     */
    eProsima_user_DllExport CFrameResult& operator =(
            CFrameResult&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x CFrameResult object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const CFrameResult& x) const;

    /*!
     * @brief Comparison operator.
     * @param x CFrameResult object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const CFrameResult& x) const;

    /*!
     * @brief This function copies the value in member vecObjectResult
     * @param _vecObjectResult New value to be copied in member vecObjectResult
     */
    eProsima_user_DllExport void vecObjectResult(
            const std::vector<CObjectResult>& _vecObjectResult);

    /*!
     * @brief This function moves the value in member vecObjectResult
     * @param _vecObjectResult New value to be moved in member vecObjectResult
     */
    eProsima_user_DllExport void vecObjectResult(
            std::vector<CObjectResult>&& _vecObjectResult);

    /*!
     * @brief This function returns a constant reference to member vecObjectResult
     * @return Constant reference to member vecObjectResult
     */
    eProsima_user_DllExport const std::vector<CObjectResult>& vecObjectResult() const;

    /*!
     * @brief This function returns a reference to member vecObjectResult
     * @return Reference to member vecObjectResult
     */
    eProsima_user_DllExport std::vector<CObjectResult>& vecObjectResult();


    /*!
     * @brief This function copies the value in member tCameraSupplement
     * @param _tCameraSupplement New value to be copied in member tCameraSupplement
     */
    eProsima_user_DllExport void tCameraSupplement(
            const CDisparityResult& _tCameraSupplement);

    /*!
     * @brief This function moves the value in member tCameraSupplement
     * @param _tCameraSupplement New value to be moved in member tCameraSupplement
     */
    eProsima_user_DllExport void tCameraSupplement(
            CDisparityResult&& _tCameraSupplement);

    /*!
     * @brief This function returns a constant reference to member tCameraSupplement
     * @return Constant reference to member tCameraSupplement
     */
    eProsima_user_DllExport const CDisparityResult& tCameraSupplement() const;

    /*!
     * @brief This function returns a reference to member tCameraSupplement
     * @return Reference to member tCameraSupplement
     */
    eProsima_user_DllExport CDisparityResult& tCameraSupplement();


    /*!
     * @brief This function copies the value in member vecVideoSrcData
     * @param _vecVideoSrcData New value to be copied in member vecVideoSrcData
     */
    eProsima_user_DllExport void vecVideoSrcData(
            const std::vector<CVideoSrcData>& _vecVideoSrcData);

    /*!
     * @brief This function moves the value in member vecVideoSrcData
     * @param _vecVideoSrcData New value to be moved in member vecVideoSrcData
     */
    eProsima_user_DllExport void vecVideoSrcData(
            std::vector<CVideoSrcData>&& _vecVideoSrcData);

    /*!
     * @brief This function returns a constant reference to member vecVideoSrcData
     * @return Constant reference to member vecVideoSrcData
     */
    eProsima_user_DllExport const std::vector<CVideoSrcData>& vecVideoSrcData() const;

    /*!
     * @brief This function returns a reference to member vecVideoSrcData
     * @return Reference to member vecVideoSrcData
     */
    eProsima_user_DllExport std::vector<CVideoSrcData>& vecVideoSrcData();

private:

    std::vector<CObjectResult> m_vecObjectResult;
    CDisparityResult m_tCameraSupplement;
    std::vector<CVideoSrcData> m_vecVideoSrcData;

};




/*!
 * @brief This class represents the structure CAlgResult defined by the user in the IDL file.
 * @ingroup CAlgResult
 */
class CAlgResult : public CDataBase
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport CAlgResult();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~CAlgResult();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object CAlgResult that will be copied.
     */
    eProsima_user_DllExport CAlgResult(
            const CAlgResult& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object CAlgResult that will be copied.
     */
    eProsima_user_DllExport CAlgResult(
            CAlgResult&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object CAlgResult that will be copied.
     */
    eProsima_user_DllExport CAlgResult& operator =(
            const CAlgResult& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object CAlgResult that will be copied.
     */
    eProsima_user_DllExport CAlgResult& operator =(
            CAlgResult&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x CAlgResult object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const CAlgResult& x) const;

    /*!
     * @brief Comparison operator.
     * @param x CAlgResult object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const CAlgResult& x) const;

    /*!
     * @brief This function copies the value in member vecFrameResult
     * @param _vecFrameResult New value to be copied in member vecFrameResult
     */
    eProsima_user_DllExport void vecFrameResult(
            const std::vector<CFrameResult>& _vecFrameResult);

    /*!
     * @brief This function moves the value in member vecFrameResult
     * @param _vecFrameResult New value to be moved in member vecFrameResult
     */
    eProsima_user_DllExport void vecFrameResult(
            std::vector<CFrameResult>&& _vecFrameResult);

    /*!
     * @brief This function returns a constant reference to member vecFrameResult
     * @return Constant reference to member vecFrameResult
     */
    eProsima_user_DllExport const std::vector<CFrameResult>& vecFrameResult() const;

    /*!
     * @brief This function returns a reference to member vecFrameResult
     * @return Reference to member vecFrameResult
     */
    eProsima_user_DllExport std::vector<CFrameResult>& vecFrameResult();

private:

    std::vector<CFrameResult> m_vecFrameResult;

};

#endif // _FAST_DDS_GENERATED_CALGRESULT_H_



